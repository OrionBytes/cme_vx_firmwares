%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Uma) ()
%%Title: (logoUFclassic.ai)
%%CreationDate: 10/20/2010 4:28 PM
%%Canvassize: 16383
%%BoundingBox: 84 -15 202 151
%%HiResBoundingBox: 84.1191 -14.3086 201.4492 150.4336
%%DocumentProcessColors: Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKCustomColor: 0 0 0 0.06 (PANTONE Cool Gray 1 CVC)
%%CMYKProcessColor: 1 1 1 1 ([\714\727\660\746\711\653])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 134.5 68.8291 134.5 68.8291
%AI3_TileBox: -163.5371 -351.4102 431.4824 490.4502
%AI3_DocumentPreview: None
%AI5_ArtSize: 268.126 231.7373
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -421.106 388.0991 1.1047 1582 880 18 0 0 50 117 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 92 128 8
%%BeginData: 11851 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45BC8CB08CB0C9FD08FFC98CB08CB09AFFC9B08CB08CB08CB08CB08C
%B08CB08CB08CB08CB5CAFD32FF938D8C8C8CCAFD08FFA18C8C8D8CC2FFCA
%8C8C8C8D8C8C8C8D8C8C8C8D8C8C8C8D8C8C8CCFFD32FFBB8CB08C8DC9FD
%08FFC98C8D8CB09AFFC9B08C8D8CB08C8D8CB08C8D8CB08C8D8CB08C8DCA
%FD32FF93FD048CC9FD08FFA0FD048CC2FFC9FD138CCAFD32FFBB8CB08CB0
%C9FD08FFC98CB08CB09AFFCABB93BB93BB93BB93BB93BB93BB93BB93BB93
%BBCAFD32FF938C8C8D8CCAFD08FFA08D8C8C8CC2FD48FFBB8C8D8CB0C9FD
%08FFC98CB08C8D99FFFFCFCAFFCAFD42FF93FD048CCAFD08FFA0FD048CBC
%FFCAFD048C99FD41FFBC8CB08CB0C9FD08FFC98CB08CB09AFFC9B08CB08C
%BCFD41FF938D8C8C8CCAFD08FFA18C8C8D8CC2FFCA8C8C8C8D93C9A0C9A1
%C3A0C9A1C3A0CFFFA87DA87DA87DA87DA87DA87DA8FFFFFFA87DA8A8FF7D
%A8A8FD1DFFBB8CB08C8DC9FD08FFC98C8D8CB09AFFC9B08C8D8CB08C8D8C
%B08C8D8CB08C8DA0FF5227F8272027F8272027F82752FFFF7D2027F87DA8
%27F82752FD1CFF93FD048CC9FD08FFA0FD048CC2FFCAFD0F8CC3FF7DF826
%F827F826F827F826F87DFF7DF827F82652A8F826F82752FD1BFFBB8CB08C
%B0C9FD08FFC98CB08CB09AFFC9B08CB08CB08CB08CB08CB08CB08CB0C3FF
%7D2720527D7D527D7D7D527DA8FF2727205252A8A87D52272027A8FD1AFF
%938C8C8D8CCAFD08FFA08D8C8C8CC2FFCA8C8D8C8C8C8D8C8C8C8D8C8C8C
%8D8CC3FF7DF82659FD0AFF27F827A8FD05FF2027F8A8FD1AFFBB8C8D8CB0
%C9FD08FFC98CB08C8D99FFC98D8CB08CB599C29AC299C29AC299C2CAFF52
%272052FD0AFF272720FD06FF27F827A8FD1AFF93FD048CCAFD08FFA0FD04
%8CBCFFCAFD048C99FD0CFF7DF827F82720272027F852A8FFA827F827A8FD
%05FF2026F8A8FD1AFFBC8CB08CB0C9FD08FFCA99BC99BBA0FFC9B08CB08C
%BCFD0DFF5220272027202720272027A8FF272720FD06FF272027A8FD1AFF
%938D8C8C8CCAFD0FFFCA8C8C8C8D99FD0DFFA87D274B27522727F827F87D
%FF27F827A8FD05FF2626F8A8FD1AFFBB8CB08C8D99CAC9CAC9CAC9CAC9CA
%C9CAC9CACAFFC9B08C8D8CBCFD15FF7DF82752FF272720FD06FF272027A8
%FFFFFF7DA8FFA8AFFFFFA8FFFFA8A8FFFF7DFFA8FFFF84A8FFFFA0FD128C
%C2FFCAFD048C93FD0DFFA8FD07FF7D26F87DFF27F827A8FD05FF2027F8A8
%FFFF5227F8A827A8FFA8F8A87D2727A827277D527D522026A8FFFF8CB08C
%B08CB08CB08CB08CB08CB08CB08CB09AFFC9B08CB08CBCFD0CFF7D272052
%A8A8A8FFA85220277DFF2727207DA8FFFFA884272027A8FFFF277DFFA827
%A8FF7D277DA8207DA85152FF527D27A8A8FFFFFFC38C8D8C8C8C8D8C8C8C
%8D8C8C8C8D8C8C8CC2FFCA8C8D8C8C99FD0CFFA8F826F827F826F827F826
%F8A8FF52F827F8267DA8F826F82727FFFFFF27A8A8A827A8FF522052A87D
%F8A87D2752527D27A8A8A8FFFFFFC98CB08C8D8CB08C8D8CB08C8D8CB08C
%8D99FFC98D8CB08CBBFD0DFF7D2027F8272027F827207DFFFFA827F82720
%7D84272027F8A8FFFFFF7D27277D27277D207D277D27277D52207D527D52
%2720FD05FFCFA0C2999993BB999993BB999993BB93C3FFCA939993BB9AFD
%0EFFA8FD0752A8FD04FFA87D52527DA8275252A8FD04FFA87D7DFF7D7D7D
%A8FFA8A8A87DFFA87DA8A8A8FF52A8FDFCFFFDFCFFFDFCFFFDFCFFFD08FF
%CAFD0BFFCFFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFD
%35FFBB93BB93BBFD09FFC393BB93B5C9FFC3B593BB93BB93BB93BB93BB93
%BB93BB93BB93BCFD33FF8C8C8C8D8CFD09FF998D8C8C8CC9FFC28C8D8C8C
%8C8D8C8C8C8D8C8C8C8D8C8C8C8D92FD33FFB08C8D8CB5FD09FFC28CB08C
%8DA1FFC28D8CB08C8D8CB08C8D8CB08C8D8CB08C8D8CBBFD33FFFD058CFD
%09FF99FD048CC3FFC2FD128C92FD33FFB08CB08CB5FD09FFC28CB08CB0C3
%FFC2B08CB58CB58CB58CB58CB58CB58CB58CB58CBBFD33FF8C8D8C8C8CFD
%09FF998C8C8D8CC3FD04FFCFFFFFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFD33
%FF8D8CB08CB5CFFD08FFC28C8D8CB0C3FD48FFFD058CFD09FF99FD048CC9
%FFC28C938C8CA0FD41FFB08CB08CB5FD09FFC28CB08CB0C3FFA0B08CB08C
%C3FD41FF8C8C8C8D8CFD09FF998D8C8C8CC9FFC28C8D8C8C99CAC9CAA1CA
%C9CAA1CAC9FD05FFFD07A8FD07FFA8A8A8FFA8A8A8FD1DFFB08C8D8CB5FD
%09FFC28CB08C8DA1FFC28D8CB08C8D8CB08C8D8CB08C8D8CB0CAFFFFA827
%27F8272027F82752FD04FF7DF82720A87D2720277DFD1CFFFD058CFD09FF
%99FD048CC3FFC2FD0F8CCFFFA8F827F826F827F826F82752FFFF7DF826F8
%277D7DF827F8267DFD1BFFB08CB08CB5FD09FFC28CB08CB0C3FFC2B08CB0
%8CB08CB08CB08CB08CB08CB5CAFF52272027527D527D52272027A8FF2027
%205252FF7D5227272052FD1BFF8C8D8C8C8CFD09FF998C8C8D8CC3FFC28C
%8C8C8D8C8C8C8D8C8C8C8D8C8C8CCFFF4BF8277DFD05FF7D7D7DFFA827F8
%27A8FD04FFA8F82620FD1BFF8D8CB08CB5CFFD08FFC28C8D8CB0C3FFA0B0
%8C8D8CBB99BB99BC99BB99BC99BCCAFF2727F8FFA87D7DA87DA8FFFFFFA8
%F82727FD05FFA8272027FD1BFFFD058CFD09FF99FD048CC3FFC2FD048CA0
%FD0BFFA852F826A852F826F827F827A8FFA826F827A8FD04FFA8F82720FD
%1BFFB08CB08CB5FD09FFC393BB93B5C9FFA0B08CB08CC3FD0CFF272720FF
%5227202720272052FFA9202727FD05FFA8272027FD1BFF8C8C8C8D8CFD10
%FFC28C8D8C8CA0FD0CFF52F826A8AF7DA87D7D2026F8A8A826F827FD05FF
%A8F82726FD1BFFB08C8D8CB0C2FFCACFCACFCACFCACFCAFFCACFCFFFC28D
%8CB08CC2FD0CFF272720A8FD05FF522027A8FF202727FD05FFA827F827FD
%04FFA8FD09FFA8FFFFFFA8FFA8FFA8A8FFFFFF92FD128CC3FFC2FD048CA0
%FD0CFF51F827A8FD05FF2727F8A8A827F827FD05FFA8F826F8FFFFFF2727
%27A820FFFF7DF8FF7D2752A8264B7D4BA84BF852FFFFC98CB08CB08CB08C
%B08CB08CB08CB08CB08CB0C3FFC2B08CB08CC3FD0CFF2727207DFFFFA8FF
%A8512027A8FF202726FFA8FFFFFF7D272027FFFFA827A8A87D27FFFF2727
%A87D20A87D277DA8277D27FF7DFFFFFFBB8C8C8C8D8C8C8C8D8C8C8C8D8C
%8C8C8D8CC3FFC28C8C8C8DA0FD0CFF7DF827F827F827F826F827F8FFA827
%F826F827A87DF827F82652FFFFA8F8FFA8A820FFA827F87DA85227FF5227
%7D527D27A8A8FFFFFFCFBC8C8D8CB08C8D8CB08C8D8CB08C8D8CB0C3FFA0
%B08C8D8CC3FD0CFFA827F8272027F8272027F884FFFF7D272027F8A87D27
%F82720FD04FF2727277D27527D2652277D27517D52277D27A8274B20FD05
%FFC9999992939293929992939299929392C9FFC38C999293A0FD0DFFA87D
%27522752275252A8FD04FF7D522727A884275252FD05FFA8527DFF7D7D7D
%A8A87DA87DA8FF527DA87DA8A852A8FDFCFFFDFCFFFDFCFFFDA6FFC299BB
%99BBCAFD08FFCA93BC99BBA0FFC9BB99BC99BB99BC99BB99BC99BB99BC99
%BB99BCCAFD32FFFD058CC9FD08FFA0FD048CBCFFC3FD138CCAFD32FFBB8C
%B08CB0C9FD08FFC98CB08CB09AFFC3B08CB08CB08CB08CB08CB08CB08CB0
%8CB08CB5CAFD32FF928D8C8C8CCAFD08FFA18C8C8D8CC2FFC98C8C8C8D8C
%8C8C8D8C8C8C8D8C8C8C8D8C8C8CCFFD32FFB58CB08C8DC9FD08FFC98C8D
%8CB09AFFA1B08C8D8CB08C8D8CB08C8D8CB08C8D8CB08C8DCAFD32FF92FD
%048CC9FD08FFA0FD048CC2FFFFA1CAA7CAA1CAA7C9A1CAA7C9A1CAA7C9A1
%CAA7FD33FFB58CB08CB0C9FD08FFC98CB08CB09AFD48FF928C8C8D8CCAFD
%08FFA08D8C8C8CC2FFCA93BB99999AFD41FFBB8C8D8CB0C9FD08FFC98CB0
%8C8D99FFC38D8CB08CBBFD41FF92FD048CCAFD08FFA0FD048CBCFFC9FD04
%8C93FFCAFFCAFFCAFFCAFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FD05FFA8
%FFFFFFA8FD1FFFBB8CB08CB0C9FD08FFC98CB08CB09AFFC3B08CB08CB58C
%B58CB58CB58CB58CB5C9FF7DFD0C27FFFFA8272720A87D2727527DFD1CFF
%928D8C8C8CCAFD08FFA18C8C8D8CC2FFC98C8C8C8D8C8C8C8D8C8C8C8D8C
%8C8CCAFF7DF827F826F827F826F827F826FF7DF826F8277DA8F827F8267D
%FD1BFFB58CB08C8DC9FD08FFC98C8D8CB09AFFA1B08C8D8CB08C8D8CB08C
%8D8CB08C8DC9FF7D2727522752275252524B5252FF2727202727A8A82727
%272027FD1BFF92FD048CC9FD08FFA0FD048CC2FFC3FD0F8CC9FD04FFA8FF
%FFFFA8FFA8A8A8FFA826F827A8FD04FFA8F827F8A8FD1AFFB58CB08CB0C9
%FD08FFC98CB08CB09AFFC3B08CB08CB593BB93BB93BB93BB93BBCAFD08FF
%7D2027207DFFA8202727FD05FFA8272027A8FD1AFF928C8C8D8CCAFD08FF
%A08D8C8C8CC2FFC38C8D8C8C93FD12FF7DF827F827A8FFA826F827FD06FF
%F827F8A8FD1AFFBB8C8D8CB0C9FD08FFC98CB58C8D9AFFC38D8CB08CBBFD
%12FF2027F827A8FFFFA8202727FD05FFA827F827A8FD1AFF92FD048CCAFD
%0AFFCAFFCFFFFFC9FD048C99FD11FF2727F8267DFFFFFFA827F827A8FD05
%FFF826F8A8FD1AFFBB8CB08CB0C2FD0FFFC3B08CB08CBCFD10FF52272027
%52FD04FFAF202727FD05FFA8272027A8FD1AFF998D8C8C8C8D929392BB93
%9392BB939392BB92C2FFC98C8C8C8D99FD0FFF7D26F82727FD05FFA827F8
%27FD06FFF826F8A8FFFFFF52F8527D52FFFF5227FF7DF87DA82727A827A8
%272752FFC98CB08C8D8CB08C8D8CB08C8D8CB08C8D8CB099FFA1B08C8D8C
%BCFD0EFFA827202720FD06FFA8F82727FD05FFA8272027A8FFFFA8F8A87D
%7D27FFFF27F8FF4B277D7D207DA8527D527D7DFFFF99FD118CC2FFC3FD04
%8C93FD0EFF27F827F8A8FD06FFA827F82720267DA8F827F82720FFFFFF7D
%27A8FF7D27FFFF26277DA8207DA85227A8277D27FFA8FFFFFFBB8CB08CB0
%8CB08CB08CB08CB08CB08CB09AFFC3B08CB08CBCFD0DFF7D2027207DFD08
%FF7D27202720A87D27202720A8FD04FF207D277D20A87D2727525252277D
%51277D527D27524BFD04FFC999938C938C938C938C938C938C938CC2FFC9
%8C938C8C99FD0CFFA8F827F852FD0AFF7D5220267DA8F82727A8FD05FF7D
%27A8A852527D7DA87DA852A8A8527DFF52FF7D527DFD08FFCFFFFFFFCFFF
%FFFFCFFD07FFCFFDFCFFFDFCFFFDFCFFFD8CFFBC99BC99C2FD09FFC993BC
%99BBC3FFC3BB99BC99BC99BC99BC99BC99BC99BC99BC99C2FD33FF8C8D8C
%8C8CFD09FF998C8C8D8CC2FFC28C8C8C8D8C8C8C8D8C8C8C8D8C8C8C8D8C
%8C8CFD33FF8D8CB08CB5CFFD08FFC28C8D8CB0C2FFA0B08C8D8CB08C8D8C
%B08C8D8CB08C8D8CB08CB5CFFD32FFFD058CFD09FF99FD048CC2FFC2FD13
%8CFD33FFB08CB08CB5FD09FFC28CB08CB0C2FFA0B08CB08CB08CB08CB08C
%B08CB08CB08CB08CB5FD33FF8C8C8C8D8CFD09FF998D8C8C8CC2FFCFA1CA
%C9CAA7CAC9CAA1CAC9CAA1CAC9CAA1CAC9FD33FFB08C8D8CB5FD09FFC28C
%B08C8DA0FD48FFFD058CFD09FF99FD048CC2FFC9939993BBA1FD41FFB08C
%B08CB5FD09FFC28CB08CB0A0FFC2B08CB08CC3FD41FF8C8D8C8C8CFD09FF
%998C8C8D8CC2FFC28C8C8C8DA0FFCAFFCFFFCAFFCFFFCAFD07FFA8FFFFFF
%A8FD07FFA8FFFFFFA8FD1FFF8D8CB08CB5CFFD08FFC28C8D8CB0C2FFA0B0
%8C8D8CB58CB58CB58CB58CB58CB5CAFFFFFF52FD072752FD04FFA82727F8
%A87D272052A8FD1CFFFD058CFD09FF99FD048CC2FFC2FD0F8CCAFFFFF826
%F827F826F827F82627FFFF7DF827F8267D7DF826F8277DFD1BFFB08CB08C
%B5FD09FFC28CB08CB0C2FFA0B08CB08CB08CB08CB08CB08CB08CB0CAFF52
%2720272752275227272027A8FF2627202727FF7D4B26272052FD1BFF8C8C
%8C8D8CFD09FF998D8C8C8CC2FFC28C8D8C8C8C8D8C8C8C8D8C8C8C8D8CCA
%FF52F8267DFD05FF5226F87DA826F827A8FD04FFA8F82720FD1BFFB08C8D
%8CB5FD09FFC28CB08C8DA0FFC28D8CB08CB593BB93BB93BB93BB92BBCAFF
%272720A8FD05FF7D20277DFF202727FD05FFA827F827FD1BFFFD058CFD09
%FF99FD048CC2FFC2FD048CA0FFCAFFFFFFCAFFFFFFCAFFFF52F8274BFD05
%7D2727F8A8A827F827A8FD05FFF826F8FD1BFFB08CB08CB5FD09FFC28CB5
%8CB0A0FFC2B08CB08CC3FD0CFFA82720272027202720272052FFFF202727
%FD05FFA8272027FD1BFF8C8D8C8C8CFD09FFCACACACFCAFFFFC28C8C8C8D
%A0FD0CFFA8F827F826F827F826F82727FFA827F827A8FD05FFF82620FD1B
%FF8D8CB08C8DC9FD0FFFA0B08C8D8CC3FD0CFF5227F8767D7D7DA87D52F8
%277DFFF82727FD05FFA8272027FD18FFA8FFFF93FD058C92999293929992
%93929992938CC3FFC2FD048C9AFD0BFFA852F8267DFD05FF5226F87DA826
%F827FD06FFF82720FD04FF7DF827A827A8FF7D26A8A82727A852278427A8
%7D2627FFC38CB08CB08CB08CB08CB08CB08CB08CB08CB0C2FFA0B08CB08C
%C3FD0CFF272720A8FD05FF7D20277DFF202727FD05FFA8272027FD04FF27
%7D7DA827A8FF7D20A87D277DA8207DA8527D277D7DA8FF938C8D8C8C8C8D
%8C8C8C8D8C8C8C8D8C8C8CC2FFC28C8D8C8CA0FD0CFF7DF8262052275227
%52F826F8A8FF27F8272727A8A82727F82727FD04FF277DFFA827A8FF5227
%52FF274BA87D20A8277D27A8A8FFFFCAB58CB08C8D8CB08C8D8CB08C8D8C
%B08C8DA0FFC28D8CB08CC2FD0CFFA8272027F8272027F8272052FFFF7D27
%F82720A87D272027F8A8FD04FF275227A8277D7D2727275252207D522752
%527D525227A8FFFFCFC292FD0E8CC2FFC2FD048CA0FD0DFFA852F826F827
%F826F852A8FFFFFF7D27F8277D7DF82727A8FD05FFA82752A87D527D52FF
%7DA8527DA87D52A87DA87D4B52FF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\303\350\304\241) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \267\342\314\327\324\366\320\247\271\244\276\337) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \312\265\312\261\311\317\311\253\324\366\320\247\271\244\276\337) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \273\354\272\317\324\366\320\247\271\244\276\337) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \267\373\272\305) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \312\351\267\250\273\255\261\312\324\366\320\247\271\244\276\337) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe \270\264\272\317\320\316\327\264) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 6 Bd
[
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
[
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 1 6 Bd
[
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
[
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 20)
(Unnamed gradient 20) 0 2 Bd
[
<
0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020
212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F404142
4343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263
646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F808182838384
8586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6
A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C
3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A
5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F707071727373747576767778
79797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596
979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD
>
<
000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D
1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B
3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858
595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576
777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394
959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6
>
1 %_Br
[
0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 5 Bd
[
<
04050505050505050505050505060606060606060606060606070707070707070707070707070808
080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D
0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111
11111111111111111111111212121212121212121212121212121212121212121212121212121212
1212121212121212121213131313131313131313131313131313
>
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D
9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E
7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A696868676766656564
64636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F
4F4E4E4E4D4D4C4C4B4B4B4A4A494949484848474746464645454544444443434343424242414141
41404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D
>
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000
>
1 %_Br
<
14141414141414141414141313131313131313131313131313131212121212121212121212121212
11111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A09090909
09090909090909090909090808080808080808080808080808070707070707070707070707070707
060606060606060606060606060605050505050505050505050505050504
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0
F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3
F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFA
FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFD
FDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D
1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919
19191919191919191919191918181818181818181818181818181818181818181717171717171717
17171717171717171717171717161616161616161616161616161616161616161615151515151515
1515151515151515151515151515141414141414
>
<
848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C
6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554
545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C
3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524
232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C
0B0B0A0A09080807070605050404030202010100
>
<
131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536373839
3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
>
0.000031
1 %_Br
<
C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99
98979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170
6F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120
1F
>
<
2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F40414142424343
44444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859
595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E
6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F80808181828383
84
>
<
424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636
363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A
2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F
1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A1919191818181817171716161615151515141414131313
13
>
0.000031
1 %_Br
[
0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS
%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs
0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS
%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs
0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs
0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS
%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs
0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS
%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 396)
(Unnamed gradient 396) 1 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs
0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 0 2 Bd
[
<
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECE
CECE
>
<
09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F2021222223242425
26272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F4040414242
4344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60
616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D
7E7F
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFA
FAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEF
EFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9
E9E9
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
A1A2
>
1 %_Br
[
0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS
%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs
0.798978 0.033753 1 0.00119 1 50 0 %_BS
%_0.798978 0.033753 1 0.00119 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\676\666\717\762\675\645\661\744)
(\676\666\717\762\675\645\661\744) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\710\741\672\715\672\732\711\653\724\716\723\660)
(\710\741\672\715\672\732\711\653\724\716\723\660) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\711\663\704\656\710\725\702\744)
(\711\663\704\656\710\725\702\744) 0 6 Bd
[
<
38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455
555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D
6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F
7F7F80808080818181818282828282
>
<
5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B
7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B
9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1
B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5
>
<
2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B
3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646
464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E
4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F
>
0
1 %_Br
<
1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738
>
<
4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657
>
<
5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
>
0
1 %_Br
<
050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D
1E1E1F
>
<
2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F
3F3F40
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554
535252
>
0
1 %_Br
<
00000000000000000001010101010101010101010101010101010202020202020202020202020202
02020303030303030303030303030303030304040404040404040404040404040405050505050505
050505
>
<
7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B
>
<
9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E
8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C
7B7B7A
>
<
03030202020202020202020202020202020202020202020202020202020202020202020201010101
01010101010101010101010101010101010101010101010101010100000000000000000000000000
000000
>
1 %_Br
<
05050505050505050404040404040404040404030303030303030303030303020202020202020202
020202010101010101010101010101000000000000
>
<
91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382
828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
>
<
2928282726262524242322222121201F1F1E1D1D1C1B1B1A19191818171616151414131212111110
0F0F0E0D0D0C0B0B0A0A0908080706060504040303
>
1 %_Br
[
0.51 0.71 0.31 0 1 50 100 %_BS
%_0.51 0.71 0.31 0 1 50 100 Bs
0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS
%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs
0.12 0.25 0.32 0 1 50 53.6679 %_BS
%_0.12 0.25 0.32 0 1 50 53.6679 Bs
0.02 0.17 0.48 0 1 48 38.764 %_BS
%_0.02 0.17 0.48 0 1 48 38.764 Bs
0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS
%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs
0.02 0.57 0.86 0.16 1 50 0 %_BS
%_0.02 0.57 0.86 0.16 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\675\645\722\776\726\701\672\732\711\653)
(\675\645\722\776\726\701\672\732\711\653) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 50 0 %_BS
%_0 0 0 1 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\717\737\720\724\675\645\661\744)
(\717\737\720\724\675\645\661\744) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\715\655\711\653\676\666\717\762)
(\715\655\711\653\676\666\717\762) 1 4 Bd
[
0
<
0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122222324
24252627272829292A2B2B2C2D2D2E2F2F303131323333343536
>
<
242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F40414243444546474849
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
>
<
0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B
>
1 %_Br
<
00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F101111121213131415151616
17181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E
2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647
474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959
>
<
3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556
565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778
797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B
9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5
>
<
636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788
898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030
30303030303131313131313131323232323232323232333333333333333334343434343434343535
3535353535353536363636363636363737373737373737383838383838383839393939393939393A
3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D
>
1 %_Br
<
595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363
636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D
6D6E
>
<
B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECF
CFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9
EAEB
>
<
F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1
E1E0
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F
>
1 %_Br
[
0 0.04 0.14 0 1 51.0204 0.395812 %_BS
%_0 0.04 0.14 0 1 51.0204 0.395812 Bs
0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS
%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs
0.35 0.71 0.96 0.24 1 50 78.0899 %_BS
%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs
0.43 0.92 0.88 0.56 1 50 100 %_BS
%_0.43 0.92 0.88 0.56 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (\723\743\720\716\715\674\660\670)
(\723\743\720\716\715\674\660\670) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4190.5 4389.1655 m
-3976.8999 4389.1655 L
-3976.8999 4381.3647 L
-4190.5 4381.3647 L
-4190.5 4389.1655 L
n
0 O
0 0 0 1 k
-4190.5 4385.2656 m
-4180.4854 4387.7573 -4173.6865 4389.1055 -4161.7007 4389.1655 c
-4148.7188 4389.2305 -4083.6997 4389.1655 y
-4018.6816 4389.2305 -4005.6997 4389.1655 v
-3993.7124 4389.1055 -3986.9136 4387.7573 -3976.8999 4385.2656 C
-3986.9136 4382.7739 -3993.7124 4381.4258 -4005.6997 4381.3647 c
-4018.6816 4381.2993 -4083.6997 4381.3647 y
-4148.7188 4381.2993 -4161.7007 4381.3647 v
-4173.6865 4381.4258 -4180.4854 4382.7739 -4190.5 4385.2656 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8063 8261.7305 m
-7965.2451 8261.7305 L
-7965.2451 8241.0146 L
-8063 8241.0146 L
-8063 8261.7305 L
n
0 O
0 g
1 XR
-7965.5586 8257.0488 m
-7980.8247 8243.2607 -7998.5537 8264.1797 -8013.9277 8251.8965 C
-8012.4199 8246.2441 -8006.7598 8253.1982 -8004.5176 8248.5518 C
-8004.4341 8246.9512 -8007.6313 8248.4512 -8007.5127 8246.3311 C
-8005.6245 8242.9219 -8000.8955 8243.4189 -7999.5664 8247.4678 C
-7993.3115 8245.498 -7986.7734 8239.5547 -7980.7847 8241.3477 C
-7979.2671 8242.6982 -7980.0708 8243.8818 -7979.6211 8245.1582 C
-7972.2871 8240.7227 -7963.4644 8249.8584 -7965.5586 8257.0488 C
f
-8009.2842 8258.6631 m
-8009.8247 8259.0391 -8008.9277 8260.1504 -8009.2529 8260.6387 C
-8011.3237 8259.8867 -8013.6919 8255.8086 -8015.4731 8253.041 C
-8015.2632 8254.5703 -8016.6641 8255.8945 -8018.0781 8253.6631 C
-8018.2383 8252.8457 -8017.3667 8252.5586 -8017.6729 8251.667 C
-8018.8306 8250.0986 -8019.8472 8251.584 -8020.7798 8251.3555 C
-8021.3184 8250.5918 -8021.6143 8249.9492 -8021.6816 8249.4248 C
-8015.5537 8246.6045 -8008.9263 8258.4072 -8002.7456 8258.833 C
-8002.9048 8261.8457 -8006.8555 8263.5313 -8009.2842 8258.6631 C
f
u
u
0 XR
-8006.1602 8253.3906 m
-8021.0142 8246.8506 -8042.4731 8251.0723 -8058.3687 8251.0498 c
-8064.2988 8251.043 -8053.8965 8251.0518 -8059.8267 8251.0566 c
N
0 O
0 g
-8003.8052 8252.1699 m
-8021.1475 8244.9941 -8040.9341 8249.7861 -8059.0532 8249.7168 C
-8059.8608 8250.6035 -8060.6685 8251.4922 -8061.4751 8252.3779 C
-8060.6973 8252.3779 -8059.9194 8252.377 -8059.1421 8252.3838 C
-8058.3345 8251.4961 -8057.5273 8250.6094 -8056.7202 8249.7227 C
-8057.3516 8249.7324 -8057.9844 8249.7256 -8058.6157 8249.7256 c
-8060.3735 8249.7285 -8064.9165 8252.3926 -8061.0376 8252.3877 c
-8060.4063 8252.3877 -8059.7734 8252.3945 -8059.1421 8252.3838 c
-8057.4155 8252.3564 -8052.8184 8249.7539 -8056.7202 8249.7227 c
-8057.4976 8249.7139 -8058.2759 8249.7168 -8059.0532 8249.7168 c
-8060.8081 8249.7158 -8065.3574 8252.3633 -8061.4751 8252.3779 c
-8044.1177 8252.4453 -8025.1025 8247.7441 -8008.5151 8254.6094 c
-8007.1035 8255.1943 -8001.8081 8252.9971 -8003.8052 8252.1699 c
-8003.8052 8252.1699 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 158)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8063 8261.7305 m
-8051.0078 8261.7305 L
-8051.0078 8251.0938 L
-8063 8251.0938 L
-8063 8261.7305 L
n
-8062.3218 8251.0938 m
-8062.3218 8255.043 L
-8062.3218 8256.0781 L
-8062.3218 8256.7168 L
-8062.3218 8257.8154 L
-8062.3218 8261.7305 L
-8051.6865 8261.7305 L
-8051.6865 8257.8154 L
-8051.6865 8256.7168 L
-8051.6865 8256.0781 L
-8051.6865 8255.043 L
-8051.6865 8251.0938 L
-8062.3218 8251.0938 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8051.0078 8257.8154 m
-8051.0078 8257.1699 L
-8063 8257.1719 L
-8063 8257.8154 L
-8063 8257.8809 L
-8051.0078 8257.8799 L
-8051.0078 8257.8154 L
f
-8051.0078 8255.043 m
-8063 8255.043 L
-8063 8255.752 L
-8051.0078 8255.752 L
-8051.0078 8255.043 L
f
0.15 1 0.9 0.1 k
-8051.0078 8256.7822 m
-8063 8256.7822 L
-8063 8257.1719 L
-8051.0078 8257.1699 L
-8051.0078 8256.7822 L
f
-8051.0078 8256.0781 m
-8051.0078 8255.752 L
-8063 8255.752 L
-8063 8256.0781 L
-8063 8256.1426 L
-8051.0078 8256.1426 L
-8051.0078 8256.0781 L
f
0 1 1 0 k
-8051.0078 8256.7168 m
-8051.0078 8256.1426 L
-8063 8256.1426 L
-8063 8256.7168 L
-8063 8256.7822 L
-8051.0078 8256.7822 L
-8051.0078 8256.7168 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 160)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8063 8260.5352 m
-8052.3638 8260.5352 L
-8052.3638 8249.8984 L
-8063 8249.8984 L
-8063 8260.5352 L
n
-8063 8249.8984 m
-8063 8253.7891 L
-8063 8254.499 L
-8063 8254.8818 L
-8063 8255.5234 L
-8063 8255.9121 L
-8063 8256.6211 L
-8063 8260.5352 L
-8052.3638 8260.5352 L
-8052.3638 8249.8984 L
-8063 8249.8984 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8056.9585 8261.7305 m
-8056.2515 8261.7305 L
-8056.2607 8256.6865 L
-8050.5229 8256.6855 L
-8050.5229 8255.9746 L
-8056.9707 8255.9775 L
-8056.9585 8261.7305 L
f
-8058.6055 8254.2646 m
-8058.8696 8254.5273 -8059.0215 8254.8936 -8059.0215 8255.2666 C
-8059.0073 8261.7305 L
-8058.2979 8261.7305 L
-8058.3125 8255.2666 L
-8058.3125 8255.0801 -8058.2363 8254.8984 -8058.1045 8254.7656 c
-8057.9717 8254.6338 -8057.7891 8254.5586 -8057.6021 8254.5586 C
-8050.5229 8254.5586 L
-8050.5229 8253.8486 L
-8057.6021 8253.8486 L
-8057.9761 8253.8486 -8058.3418 8254 -8058.6055 8254.2646 c
f
0.15 1 0.9 0.1 k
-8057.2827 8261.7305 m
-8056.9585 8261.7305 L
-8056.9707 8255.9775 L
-8050.5229 8255.9746 L
-8050.5229 8255.5859 L
-8057.2827 8255.5859 L
-8057.2827 8261.7305 L
f
-8058.1045 8254.7656 m
-8058.2363 8254.8984 -8058.3125 8255.0801 -8058.3125 8255.2666 C
-8058.2979 8261.7305 L
-8057.9219 8261.7305 L
-8057.9219 8255.2666 L
-8057.9219 8255.1826 -8057.8877 8255.1016 -8057.8281 8255.041 c
-8057.7695 8254.9824 -8057.6865 8254.9492 -8057.6025 8254.9492 C
-8050.5229 8254.9492 L
-8050.5229 8254.5586 L
-8057.6021 8254.5586 L
-8057.7891 8254.5586 -8057.9717 8254.6338 -8058.1045 8254.7656 c
f
0 1 1 0 k
-8057.8281 8255.041 m
-8057.8877 8255.1016 -8057.9219 8255.1826 -8057.9219 8255.2666 C
-8057.9219 8261.7305 L
-8057.2827 8261.7305 L
-8057.2827 8255.5859 L
-8050.5229 8255.5859 L
-8050.5229 8254.9492 L
-8057.6025 8254.9492 L
-8057.6865 8254.9492 -8057.7695 8254.9824 -8057.8281 8255.041 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 161)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8063 8261.7305 m
-8051.0078 8261.7305 L
-8051.0078 8251.0938 L
-8063 8251.0938 L
-8063 8261.7305 L
n
-8062.0117 8251.0938 m
-8062.0117 8255.043 L
-8062.0117 8256.0781 L
-8062.0117 8256.7168 L
-8062.0117 8257.8154 L
-8062.0117 8261.7305 L
-8051.3765 8261.7305 L
-8051.3765 8257.8154 L
-8051.3765 8256.7168 L
-8051.3765 8256.0781 L
-8051.3765 8255.043 L
-8051.3765 8251.0938 L
-8062.0117 8251.0938 L
n
0 O
0.15 1 0.9 0.1 k
-8051.0078 8256.7822 m
-8063 8256.7822 L
-8063 8257.1719 L
-8051.0078 8257.1699 L
-8051.0078 8256.7822 L
f
-8051.0078 8256.0781 m
-8051.0078 8255.752 L
-8063 8255.752 L
-8063 8256.0781 L
-8063 8256.1426 L
-8051.0078 8256.1426 L
-8051.0078 8256.0781 L
f
0 1 1 0 k
-8051.0078 8256.7168 m
-8051.0078 8256.1426 L
-8063 8256.1426 L
-8063 8256.7168 L
-8063 8256.7822 L
-8051.0078 8256.7822 L
-8051.0078 8256.7168 L
f
1 Ap
0.746094 0.675781 0.667969 0.898438 k
-8061.2715 8257.8809 m
-8063 8257.8809 L
-8063 8255.043 L
-8061.2715 8255.043 L
-8061.2715 8257.8809 L
f
0.15 1 0.9 0.1 k
-8060.5967 8257.8643 m
-8061.4492 8257.8643 L
-8061.4492 8255.0273 L
-8060.5967 8255.0273 L
-8060.5967 8257.8643 L
f
0 Ap
0.746094 0.675781 0.667969 0.898438 k
-8051.0078 8257.8154 m
-8051.0078 8257.1699 L
-8063 8257.1719 L
-8063 8257.8154 L
-8063 8257.8809 L
-8051.0078 8257.8799 L
-8051.0078 8257.8154 L
f
-8051.0078 8255.043 m
-8063 8255.043 L
-8063 8255.752 L
-8051.0078 8255.752 L
-8051.0078 8255.043 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 162)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8063 8261.7305 m
-8051.6099 8261.7305 L
-8051.6099 8251.0938 L
-8063 8251.0938 L
-8063 8261.7305 L
n
-8062.2461 8257.8154 m
-8062.2461 8261.7305 L
-8051.6099 8261.7305 L
-8051.6099 8251.0938 L
-8062.2461 8251.0938 L
-8062.2461 8254.9854 L
-8062.2461 8257.8154 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8056.6245 8257.752 m
-8056.6245 8257.1074 L
-8063 8257.1074 L
-8063 8257.752 L
-8063 8257.8154 L
-8056.6245 8257.8154 L
-8056.6245 8257.752 L
f
-8056.6245 8254.9785 m
-8063 8254.9785 L
-8063 8255.6885 L
-8056.6245 8255.6885 L
-8056.6245 8254.9785 L
f
0.15 1 0.9 0.1 k
-8056.6245 8256.7168 m
-8063 8256.7168 L
-8063 8257.1074 L
-8056.6245 8257.1074 L
-8056.6245 8256.7168 L
f
-8056.6245 8256.0137 m
-8056.6245 8255.6885 L
-8063 8255.6885 L
-8063 8256.0137 L
-8063 8256.0791 L
-8056.6245 8256.0791 L
-8056.6245 8256.0137 L
f
0 1 1 0 k
-8056.6245 8256.6514 m
-8056.6245 8256.0791 L
-8063 8256.0791 L
-8063 8256.6514 L
-8063 8256.7168 L
-8056.6245 8256.7168 L
-8056.6245 8256.6514 L
f
U
-8062.2461 8261.7305 m
-8051.6099 8261.7305 L
-8051.6099 8251.0938 L
-8062.2461 8251.0938 L
-8062.2461 8261.7305 L
n
-8051.7241 8256.4121 m
-8059.8125 8261.082 L
N
0 O
0.746094 0.675781 0.667969 0.898438 k
-8059.4814 8255.6904 m
-8059.4814 8252.8711 L
-8053.3535 8256.4082 L
-8059.4814 8259.9463 L
-8059.4814 8257.1074 L
-8059.8125 8257.1074 L
-8059.8125 8257.8154 L
-8059.8125 8261.082 L
-8051.7241 8256.4121 L
-8059.8125 8251.7432 L
-8059.8125 8254.9814 L
-8059.8125 8255.6904 L
-8059.4814 8255.6904 L
f
0.15 1 0.9 0.1 k
-8059.4814 8259.9463 m
-8053.3535 8256.4082 L
-8059.4814 8252.8711 L
-8059.4814 8255.6904 L
-8059.4814 8256.0781 L
-8059.3472 8256.0781 L
-8059.2148 8255.7061 -8058.8633 8255.4375 -8058.4453 8255.4375 c
-8057.9155 8255.4375 -8057.4849 8255.8672 -8057.4849 8256.3975 c
-8057.4849 8256.9277 -8057.9155 8257.3574 -8058.4453 8257.3574 c
-8058.8633 8257.3574 -8059.2148 8257.0898 -8059.3472 8256.7168 C
-8059.4814 8256.7168 L
-8059.4814 8257.1074 L
-8059.4814 8259.9463 L
f
0 1 1 0 k
-8058.4453 8257.3574 m
-8057.9155 8257.3574 -8057.4849 8256.9277 -8057.4849 8256.3975 c
-8057.4849 8255.8672 -8057.9155 8255.4375 -8058.4453 8255.4375 c
-8058.8633 8255.4375 -8059.2148 8255.7061 -8059.3472 8256.0781 c
-8059.3828 8256.1777 -8059.4058 8256.2842 -8059.4058 8256.3975 c
-8059.4058 8256.5098 -8059.3828 8256.6152 -8059.3472 8256.7168 c
-8059.2148 8257.0898 -8058.8633 8257.3574 -8058.4453 8257.3574 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8062.8833 8261.6855 m
-7971.0479 8261.6855 L
-7971.0479 8257.4063 L
-8062.8833 8257.4063 L
-8062.8833 8261.6855 L
n
0 O
0 0 0 1 k
-8062.6631 8259.0059 m
-8063 8259.0723 -8062.4814 8259.2617 -8062.8833 8259.1191 C
-8062.8379 8259.001 -8062.7725 8258.9121 -8062.6631 8259.0059 C
f
-7972.1675 8259.1719 m
-7973.2524 8259.9346 -7974.6816 8259.1641 -7975.8701 8259.6504 C
-7976.0098 8259.6826 -7975.8345 8259.2324 -7976.1484 8259.333 C
-7977.3008 8259.9258 -7979.1162 8259.5723 -7980.5195 8259.1152 C
-7980.4346 8258.9971 L
-7980.7017 8258.9121 -7981.0283 8259.3027 -7981.3115 8259.248 C
-7981.3135 8259.1699 -7981.2207 8259.1367 -7981.2861 8259.0293 C
-7981.3574 8259.2656 -7981.7983 8259.1387 -7981.9185 8259.3145 C
-7982.0303 8259.2227 -7982.0195 8259.0352 -7982.1641 8258.9316 C
-7982.3262 8259.2002 L
-7982.7769 8259.8398 -7983.4209 8259.1563 -7984.0361 8259.4863 C
-7984.0063 8259.4238 -7983.9453 8259.375 -7983.9941 8259.3145 C
-7984.9814 8259.7031 -7986.2168 8259.6309 -7987.3208 8259.7734 C
-7987.2769 8259.6787 -7987.2363 8259.5059 -7987.3008 8259.3984 C
-7987.3555 8259.6816 -7987.6963 8259.7529 -7987.9922 8259.8086 C
-7988.1255 8259.5176 -7988.4995 8260.0742 -7988.8467 8259.9141 C
-7988.8169 8259.8496 L
-7989.0732 8260.1543 -7989.1973 8259.6738 -7989.4053 8260.0391 C
-7989.5684 8259.8105 L
-7989.6807 8260.2207 -7989.9395 8259.5977 -7990.1514 8259.8066 C
-7990.1445 8259.8906 L
-7990.3442 8259.9902 -7990.4482 8259.7842 -7990.6338 8259.8535 C
-7990.6514 8259.8066 L
-7991.0854 8259.9141 -7991.3379 8259.6855 -7991.3271 8260.0059 C
-7991.4795 8259.749 -7990.9063 8259.8887 -7991.1455 8259.5156 C
-7992.5732 8259.8457 -7994.0459 8259.7813 -7995.4834 8259.7871 C
-7995.6465 8259.6582 -7995.7505 8259.6191 -7995.7871 8259.498 C
-7995.9307 8259.5625 -7996.3281 8259.5566 -7996.4585 8259.7207 C
-7996.4102 8259.7139 -7996.5513 8259.5566 -7996.6274 8259.541 C
-7996.8887 8259.4199 -7996.9131 8259.8926 -7997.2002 8259.749 C
-7997.0859 8259.6641 -7997.0469 8259.5605 -7997.0854 8259.4414 C
-7997.3301 8259.6914 -7997.6577 8259.6514 -7997.9473 8259.7324 C
-7997.9023 8259.6787 -7997.8325 8259.6465 -7997.8433 8259.5459 C
-7998.1602 8259.8291 -7998.4209 8259.4863 -7998.6982 8259.665 C
-7998.5947 8259.4805 L
-7999.0415 8259.2559 -7998.7266 8259.8672 -7999.1128 8259.7344 C
-7999.02 8259.6758 -7999.0527 8259.6035 -7999.0361 8259.5283 C
-7999.3965 8259.8643 -7999.9795 8259.7529 -8000.3389 8259.8672 C
-8000.3174 8259.8418 -8000.3232 8259.791 Y
-8000.7148 8259.833 -8001.1245 8259.7285 -8001.5552 8259.875 C
-8001.7119 8259.793 -8001.5039 8259.4238 -8001.9185 8259.4922 C
-8001.9033 8259.8633 -8002.6221 8259.6445 -8002.3779 8260.0645 C
-8002.7319 8260.0039 -8003.2925 8259.8643 -8003.5283 8259.9902 C
-8003.3691 8259.8496 -8003.7007 8259.5371 -8003.4063 8259.5059 C
-8003.6289 8259.2803 L
-8003.5957 8259.1289 -8003.3999 8259.332 -8003.4707 8259.1406 C
-8003.6182 8259.1563 -8004.0479 8259.3027 -8004.1797 8259.2422 C
-8004.4531 8259.4697 -8004.7041 8259.8945 -8005.1465 8259.9414 C
-8004.9385 8259.7969 -8005.2646 8259.5322 -8005.1235 8259.4688 C
-8005.7407 8260.1797 L
-8005.8877 8260.1973 -8005.7725 8259.8867 -8005.9854 8259.9834 C
-8005.9746 8260.082 -8006.0674 8260.1426 -8006.1318 8260.2227 C
-8006.1875 8260.1797 -8006.7441 8260.3145 -8006.8081 8259.9492 C
-8006.8735 8259.8066 -8006.5684 8259.873 -8006.7314 8259.7422 C
-8007.0029 8259.7461 -8007.0151 8259.8711 -8007.2871 8259.877 C
-8007.2925 8259.8281 L
-8007.4717 8259.7734 -8007.8213 8259.9834 -8007.6265 8260.1855 C
-8007.5015 8260.1973 -8007.6738 8259.9658 -8007.4888 8260.0723 C
-8007.6152 8260.2842 -8007.9312 8260.3438 -8008.2031 8260.3477 C
-8008.1104 8260.2891 -8008.1216 8260.1914 -8008.0845 8260.0879 C
-8008.4497 8260.375 -8008.8369 8260.4658 -8009.2451 8260.5859 C
-8009.2515 8260.7598 -8009.0928 8260.2695 -8009.0327 8260.3613 C
-8009.5557 8260.1201 -8010.1128 8260.7031 -8010.5479 8260.3506 C
-8010.4766 8260.3203 -8010.5098 8260.5977 -8010.5146 8260.5488 C
-8010.7666 8260.5273 -8010.7549 8260.2754 -8010.9189 8260.3682 C
-8010.9355 8260.2207 -8011.1255 8260.416 -8011.2944 8260.4609 C
-8011.3818 8260.5674 -8011.3384 8260.3887 -8011.1914 8260.373 C
-8011.4268 8260.498 -8012.3691 8260.7246 -8012.9131 8260.5098 C
-8012.9023 8260.6074 -8013.2471 8260.8682 -8013.3721 8260.8574 C
-8013.3232 8260.6289 L
-8013.4375 8260.4922 -8013.7422 8260.6484 -8013.7632 8260.4531 C
-8014.0303 8260.7305 -8012.7344 8260.2168 -8013.0957 8260.4307 C
-8013.1895 8260.2402 -8013.5991 8260.7949 -8013.5215 8260.4834 C
-8013.7725 8260.4922 -8014.0161 8260.749 -8014.2559 8260.5352 C
-8014.1865 8260.5723 -8014.0522 8260.2178 -8014.2549 8260.2344 C
-8014.6123 8260.2754 -8014.3564 8260.3438 -8014.6465 8260.4199 C
-8014.8281 8260.5137 L
-8014.8398 8260.7363 -8015.1475 8260.4834 -8015.0146 8260.7324 C
-8015.0586 8260.5488 -8015.5337 8260.8457 -8015.4971 8260.4766 C
-8015.4473 8260.1855 L
-8015.6016 8260.207 -8015.7002 8260.4922 -8015.8213 8260.6201 C
-8015.8418 8260.5938 -8015.8823 8260.5352 -8015.8745 8260.4883 C
-8015.8994 8260.9336 -8016.2432 8260.4512 -8016.4268 8260.7949 C
-8016.7505 8260.6406 -8017.2495 8260.7813 -8017.4023 8260.5039 C
-8017.6514 8260.6387 -8017.8784 8260.7988 -8018.1621 8260.7031 C
-8018.1055 8260.6611 -8018.0283 8260.6484 -8018.0122 8260.5527 C
-8018.1904 8260.4219 -8018.2344 8260.5391 -8018.3975 8260.6113 C
-8018.3608 8260.5449 -8018.7539 8260.3506 -8018.9521 8260.1934 C
-8019.1992 8260.3262 -8019.1143 8260.5664 -8019.1392 8260.7129 C
-8019.3652 8260.2734 -8019.8379 8260.9961 -8020.1211 8260.5977 C
-8020.0352 8260.5371 -8019.7598 8260.3818 -8019.9658 8260.2715 C
-8020.1919 8259.833 -8020.4219 8260.5957 -8020.7861 8260.3848 C
-8020.6968 8260.749 L
-8020.8594 8260.5234 -8021.2334 8260.9609 -8021.1963 8260.5898 C
-8021.3184 8260.7207 -8021.6265 8260.4688 -8021.5859 8260.8242 C
-8022.1846 8260.5234 -8023.0425 8261.0059 -8023.4102 8260.3682 C
-8023.4961 8260.4277 -8023.7104 8260.3672 -8023.6665 8260.5498 C
-8023.5239 8260.748 -8023.4673 8260.4082 -8023.4141 8260.543 C
-8023.4912 8260.5537 -8023.5078 8260.6514 -8023.5161 8260.7002 C
-8023.7021 8260.6191 -8023.8486 8260.5938 -8023.6729 8260.2979 C
-8024.0869 8260.0781 -8024.1001 8260.9023 -8024.6274 8260.7637 C
-8024.6035 8260.6162 -8024.6436 8260.5605 -8024.7979 8260.584 C
-8025.0903 8260.8359 L
-8025.4312 8260.7773 -8025.2842 8260.501 -8025.2925 8260.252 C
-8025.4746 8260.2949 -8025.6973 8260.2832 -8025.7803 8260.4688 C
-8026.0015 8260.1563 L
-8025.8398 8260.3818 -8026.1514 8260.3066 -8026.2368 8260.3672 C
-8026.1514 8260.3066 L
-8026.1846 8260.2002 -8026.3955 8260.2656 -8026.5024 8260.2969 C
-8026.4766 8260.4512 -8026.2617 8260.5137 -8026.1445 8260.5586 C
-8026.2373 8260.668 -8026.3823 8260.6426 -8026.5059 8260.7715 C
-8026.4648 8260.5273 -8026.8027 8260.5977 -8026.9473 8260.5723 C
-8027.1133 8260.5195 -8027.1348 8260.791 -8027.1831 8260.7832 C
-8027.1875 8260.6563 -8027.4541 8260.7617 -8027.3247 8260.584 C
-8027.2681 8260.543 -8027.1953 8260.707 -8027.1016 8260.5957 C
-8027.2109 8260.501 -8027.1982 8260.2803 -8027.4258 8260.4414 C
-8027.5967 8260.5625 -8027.3818 8260.9238 -8027.7061 8260.7695 C
-8027.6211 8260.709 -8027.6055 8260.6113 -8027.5391 8260.5234 C
-8027.8433 8260.3965 L
-8027.8564 8260.6191 L
-8027.8975 8260.5625 -8027.8691 8260.543 -8027.8877 8260.5137 C
-8027.9785 8260.748 -8028.3521 8260.5859 -8028.4209 8260.8496 C
-8028.5742 8260.873 -8028.7441 8260.6953 -8028.8906 8260.6699 C
-8028.8623 8260.6504 L
-8029.0415 8260.5195 -8029.2793 8260.6055 -8029.4297 8260.7559 C
-8029.4219 8260.707 L
-8029.5195 8260.6895 -8029.7505 8260.7246 -8029.8735 8260.8555 C
-8030.1201 8260.6875 -8029.9561 8260.0146 -8030.2295 8260.2949 C
-8030.48 8260.3027 -8030.6221 8260.7031 -8030.5215 8260.8457 C
-8030.9717 8260.6953 -8031.4834 8261.0586 -8031.9009 8260.7129 C
-8031.9658 8260.8027 -8031.9248 8260.8594 -8032.0586 8260.9121 C
-8032.7197 8260.8242 -8033.4551 8261.1758 -8033.9814 8260.7383 C
-8033.79 8260.6445 -8033.9688 8260.5156 -8033.9727 8260.3887 C
-8034.1309 8260.5879 -8034.1631 8260.1816 -8034.2197 8260.5234 C
-8034.2041 8260.7246 -8034.2197 8260.8223 -8034.0337 8260.9033 C
-8034.4282 8261.0117 -8035.0283 8261.0117 -8035.2471 8260.8242 C
-8035.1377 8260.917 -8035.2227 8260.9785 -8035.3086 8261.0391 C
-8035.2803 8260.7178 -8035.5713 8260.6699 -8035.7915 8260.7832 C
-8035.8223 8260.9785 L
-8035.9658 8260.7773 L
-8036.0503 8260.8398 -8036.0591 8261.1875 -8036.2773 8261 C
-8036.2891 8260.9238 -8036.3018 8260.8467 -8036.3418 8260.791 C
-8036.5693 8260.9512 -8036.8906 8261.2227 -8037.1377 8261.0566 C
-8037.3398 8260.7715 L
-8037.4453 8260.8027 -8037.6235 8260.9746 -8037.4375 8261.0566 C
-8037.8594 8260.8848 -8038.1309 8260.8633 -8038.2646 8260.6162 C
-8038.9912 8261.2178 -8040.0459 8261.2422 -8040.8906 8261.1992 C
-8040.8652 8261.0527 L
-8041.0923 8260.916 -8040.9834 8261.3086 -8041.1416 8261.207 C
-8041.0684 8261.0674 -8041.3145 8260.9033 -8041.1362 8260.7324 C
-8041.4609 8260.5781 -8041.5547 8260.9863 -8041.7656 8261.0527 C
-8041.7979 8261.2451 -8041.5957 8260.9297 -8041.6367 8261.1738 C
-8041.6729 8261.2422 -8042.0859 8261.0234 -8042.1362 8261.3145 C
-8042.2178 8261.2002 -8042.1543 8260.9863 -8042.1104 8260.8682 C
-8042.3086 8261.0098 L
-8042.5513 8260.6699 -8041.7559 8260.4023 -8042.0107 8259.9834 C
-8042.1934 8260.0293 L
-8042.3682 8259.7246 -8041.71 8259.6855 -8042.1689 8259.5811 C
-8042.3682 8259.7246 -8042.5381 8260.1465 -8042.3608 8260.2754 C
-8042.7754 8260.3555 -8042.5527 8260.9688 -8042.9985 8260.9443 C
-8043.1201 8260.7734 -8042.6416 8260.9033 -8042.7275 8260.6641 C
-8042.9375 8260.4297 -8043.1484 8260.7949 -8043.3354 8260.7129 C
-8043.1279 8260.8223 -8043.3032 8261.1162 -8043.4375 8261.1699 C
-8043.6641 8261.0322 -8043.29 8260.8945 -8043.6113 8260.8643 C
-8043.6641 8261.0322 -8043.9595 8261.1582 -8043.7041 8261.2754 C
-8043.8203 8261.6563 -8044.0381 8261.1699 -8044.2129 8261.4648 C
-8044.3174 8261.1973 -8043.8823 8260.8457 -8044.2354 8260.7119 C
-8044.1792 8260.9697 -8044.6704 8261.0625 -8044.4839 8261.4453 C
-8044.6221 8261.3711 -8044.6367 8261.168 -8044.5361 8261.0098 C
-8044.7334 8260.8506 -8045.0151 8261.4805 -8045.0801 8260.9688 C
-8045.1479 8261.2324 L
-8045.21 8261.1465 -8045.2983 8261.082 -8045.3994 8260.9395 C
-8045.5732 8260.9346 -8045.96 8261.2969 -8045.9443 8260.8984 C
-8046 8260.9395 -8046.3975 8260.9219 -8046.2441 8261.1973 C
-8045.9971 8261.3652 -8045.96 8260.9961 -8045.8223 8261.3682 C
-8045.9971 8261.0645 -8046.1787 8261.4082 -8046.3213 8261.5098 C
-8046.3447 8261.3555 L
-8046.4297 8261.416 -8046.6255 8261.3818 -8046.6787 8261.5488 C
-8046.6133 8261.4609 -8046.6475 8261.3555 -8046.7148 8261.3184 C
-8046.8042 8261.5527 L
-8047.1494 8261.6699 -8046.8857 8261.1406 -8047.2217 8261.209 C
-8046.9663 8261.0273 L
-8047.0225 8261.0664 -8047.1367 8260.8467 -8047.2979 8260.9199 C
-8047.3604 8261.1338 -8047.4775 8261.3906 -8047.5313 8261.5566 C
-8047.7207 8261.6504 -8047.6162 8261.3154 -8047.8027 8261.5352 C
-8047.5586 8261.2773 L
-8047.5215 8261.207 -8047.7231 8260.9238 -8047.9761 8260.9297 C
-8048.1377 8261.0039 -8048.3887 8261.3125 -8048.1338 8261.4297 C
-8048.2607 8261.4336 -8048.4385 8261.3027 -8048.3379 8261.1465 C
-8048.6255 8261.2207 -8048.2998 8261.377 -8048.5479 8261.5098 C
-8048.6494 8261.3672 -8048.9658 8261.1641 -8049.1563 8260.957 C
-8048.8975 8260.5986 L
-8049.0693 8260.5957 L
-8048.8467 8260.3086 -8049.1826 8260.377 -8049.0566 8260.0742 C
-8049.1743 8260.0273 -8049.3169 8260.1299 -8049.4307 8260.209 C
-8049.0864 8260.6934 -8049.8159 8260.8711 -8049.7158 8261.3125 C
-8050.1875 8261.4336 -8050.0107 8260.2383 -8050.5024 8260.9297 C
-8050.4219 8261.0449 -8050.6533 8261.3809 -8050.3564 8261.2529 C
-8050.6494 8261.2051 -8050.5557 8261.6963 -8050.9014 8261.5137 C
-8050.6455 8261.332 -8051.1763 8261.0664 -8050.8066 8260.8027 C
-8050.8311 8260.9492 -8050.6001 8260.9141 -8050.5435 8260.873 C
-8050.6641 8260.7031 -8050.5186 8260.4277 -8050.8184 8260.4277 C
-8051.0015 8260.4697 -8051.2524 8260.4785 -8051.2158 8260.709 C
-8051.2085 8260.9619 -8050.9365 8260.6816 -8051.0537 8260.9375 C
-8051.4185 8261.0254 -8051.4795 8260.6406 -8051.6304 8261.0898 C
-8051.3999 8261.0537 -8051.3423 8261.3145 -8051.3467 8261.4883 C
-8051.6143 8261.5938 L
-8051.5625 8261.4258 L
-8051.9922 8261.3047 -8051.6895 8261.7305 -8052.1055 8261.6855 C
-8052.3008 8261.3535 L
-8052.2017 8261.0674 -8051.6953 8261.4805 -8051.7695 8261.0146 C
-8052.04 8260.9961 -8052.1299 8261.2324 -8052.3848 8261.1123 C
-8052.3281 8261.0723 -8052.2505 8261.0605 -8052.1943 8261.0195 C
-8052.2915 8261.0039 -8052.3877 8260.3867 -8052.7734 8260.748 C
-8052.9727 8260.8887 -8052.8262 8260.9141 -8052.8311 8261.0879 C
-8053.2656 8261.1406 -8053.3955 8261.3184 -8053.6753 8261.3457 C
-8053.6177 8261.0059 -8054.1699 8261.3125 -8053.8608 8260.9648 C
-8053.7188 8261.1641 -8053.0903 8261.1445 -8052.9365 8260.8203 C
-8053.0947 8260.417 -8052.5952 8260.877 -8052.5024 8260.4688 C
-8052.8506 8260.459 -8052.8335 8260.0625 -8052.8896 8259.8027 C
-8052.9863 8259.7842 -8053.0801 8259.8945 -8053.1377 8259.9346 C
-8053.1787 8260.1797 -8053.0522 8260.1758 -8053.0449 8260.4277 C
-8053.4336 8260.3613 -8053.8081 8260.498 -8054.0225 8260.7363 C
-8054.1523 8260.6152 -8054.1113 8260.3711 -8053.9575 8260.3477 C
-8054.4199 8260.4199 -8054.9141 8260.3867 -8055.3535 8260.3125 C
-8055.0693 8260.7119 -8055.8433 8260.4063 -8055.6494 8260.7383 C
-8055.4141 8260.8281 -8055.2119 8261.1123 -8055.3418 8261.291 C
-8055.4888 8261.2656 -8055.3369 8261.1162 -8055.3984 8261.0313 C
-8055.5859 8261.249 -8055.6895 8260.6816 -8055.8735 8261.0254 C
-8055.4512 8260.8965 -8055.7915 8260.5391 -8055.7139 8260.2266 C
-8056.0186 8260.4023 -8055.7007 8260.0039 -8056.0024 8260.0039 C
-8056.3057 8260.1777 -8056.6787 8260.3145 -8057.0161 8260.3818 C
-8057.4399 8260.0859 -8058.0898 8260.377 -8058.4683 8260.3887 C
-8058.6665 8260.2305 -8058.5322 8259.877 -8058.7471 8259.8154 C
-8058.9995 8259.8223 -8058.5601 8260.1973 -8058.9336 8260.0352 C
-8058.8975 8259.9648 L
-8059.0107 8260.0469 -8059.5825 8259.7246 -8059.6929 8260.2324 C
-8059.5776 8259.8496 L
-8059.6475 8259.8145 -8059.7119 8259.9023 -8059.7695 8259.9434 C
-8059.7725 8259.8184 -8059.8535 8259.7051 -8059.7402 8259.623 C
-8059.9707 8259.3594 -8060.2241 8259.665 -8060.4746 8259.6758 C
-8060.3135 8259.9023 L
-8060.7422 8260.0801 -8061.0293 8259.8555 -8061.4443 8259.9346 C
-8061.4316 8259.7129 L
-8061.6787 8259.8457 L
-8061.6182 8259.6309 -8061.8447 8259.4922 -8061.9751 8259.6719 C
-8061.3335 8259.1289 L
-8061.1553 8259.2598 -8061.5283 8259.3965 -8061.4165 8259.6152 C
-8061.3213 8259.8066 -8060.9375 8259.7461 -8060.8755 8259.5322 C
-8061.0225 8259.5078 -8061.0293 8259.5566 -8061.1436 8259.6367 C
-8061.1919 8259.3281 -8060.9688 8259.3398 -8060.8584 8259.1338 C
-8060.9355 8259.1465 -8061.0449 8259.0527 -8061.0615 8259.1504 C
-8060.9102 8259 -8060.7578 8258.9766 -8060.5059 8258.9688 C
-8060.6763 8259.0898 -8060.4131 8259.1602 -8060.4775 8259.248 C
-8060.4575 8258.9766 -8060.2168 8258.8926 -8059.9053 8258.9688 C
-8059.6831 8259.2832 -8059.3208 8258.7666 -8058.96 8258.8535 C
-8059.1064 8259.1289 -8059.2935 8259.3496 -8059.5127 8259.4609 C
-8059.2861 8259.5986 -8059.2607 8259.4531 -8059.0337 8259.5918 C
-8058.9238 8259.3867 -8058.8457 8259.0723 -8058.5503 8258.9473 C
-8058.5342 8259.1504 L
-8058.2666 8259.0469 -8058.2666 8258.7461 -8057.9258 8258.8027 C
-8057.3418 8258.9023 -8056.7407 8258.9023 -8056.2949 8258.9277 C
-8056.2783 8259.1299 L
-8056.0303 8258.6963 -8055.4521 8258.9697 -8055.1182 8258.7773 C
-8054.5503 8258.9727 -8053.8848 8258.584 -8053.5938 8258.9336 C
-8052.5913 8258.7773 -8051.7148 8258.625 -8050.6768 8258.6992 C
-8050.8516 8258.9941 L
-8050.6655 8258.7773 -8050.7305 8259.1641 -8050.5479 8259.1201 C
-8050.7578 8258.8848 -8050.2949 8258.8145 -8050.1665 8258.6338 C
-8049.7041 8258.8633 -8049.1104 8258.6133 -8048.7007 8258.4063 C
-8048.6846 8258.6094 L
-8048.2705 8258.2285 -8047.7759 8258.5625 -8047.2598 8258.625 C
-8047.2007 8258.709 -8047.1074 8258.8994 -8046.9536 8258.877 C
-8046.6738 8258.5488 -8046.5273 8258.5723 -8046.1167 8258.3672 C
-8045.8169 8258.3672 -8045.3301 8258.4482 -8045.0254 8258.5762 C
-8043.8975 8258.1152 -8042.7456 8258.4102 -8041.5732 8258.1328 C
-8041.4888 8258.3711 L
-8040.3521 8257.8613 -8038.9541 8258.3242 -8037.9839 8258.0625 C
-8038.0776 8258.4697 L
-8037.7734 8258.5957 -8037.3843 8258.3633 -8037.4619 8258.0742 C
-8037.1567 8258.1992 -8036.7007 8257.877 -8036.5068 8258.2119 C
-8036.1953 8258.2871 -8036.1255 8258.0234 -8035.8662 8257.9688 C
-8035.2422 8258.123 -8035.0107 8258.0879 -8034.4224 8258.0117 C
-8034.5684 8257.9863 L
-8034.6328 8258.0762 -8034.6387 8258.249 -8034.4922 8258.2754 C
-8034.2725 8258.1621 -8033.6846 8258.3848 -8033.9033 8257.8984 C
-8033.2754 8258.1797 -8032.4385 8257.6699 -8031.8271 8258.0488 C
-8031.8789 8257.916 -8031.7246 8257.8906 -8031.6602 8257.8008 C
-8031.1089 8257.7949 -8030.5293 8258.0664 -8030.0898 8257.8398 C
-8030.0024 8257.9063 -8030.2295 8258.0664 -8030.0049 8258.0801 C
-8029.8721 8258.0293 -8030.0024 8257.9063 -8029.8384 8257.832 C
-8028.9453 8257.584 -8028.0303 8258.0879 -8027.2188 8258.0234 C
-8025.7754 8257.7666 -8024.2695 8257.8965 -8022.8867 8257.8535 C
-8022.9023 8257.9512 L
-8022.4395 8257.5781 -8021.8159 8258.333 -8021.4463 8257.7715 C
-8021.3369 8257.8643 -8021.0283 8257.8154 -8021.1094 8258.0039 C
-8020.7407 8257.7402 -8020.0771 8258.252 -8019.5439 8257.917 C
-8019.5928 8257.9082 -8019.6211 8257.9277 -8019.6777 8257.9697 C
-8019.1392 8258.1855 -8018.6641 8257.8906 -8018.0957 8258.0859 C
-8018.1533 8258.1279 -8018.2583 8258.1582 -8018.2754 8258.2559 C
-8018.0557 8258.4434 -8017.7549 8257.8438 -8017.6348 8258.3145 C
-8017.5088 8258.3105 -8017.5449 8258.0781 -8017.6221 8258.0918 C
-8016.3779 8258.2754 -8015.0498 8257.9746 -8013.7549 8257.8672 C
-8012.8271 8258.1484 -8013.6982 8258.6602 -8012.9663 8258.3086 C
-8012.9063 8258.3994 -8012.9229 8258.1289 -8012.9131 8258.2266 C
-8012.6299 8258.0947 -8012.4717 8258.752 -8012.2754 8258.5059 C
-8012.3564 8258.2168 -8012.1445 8258.3438 -8012.1387 8258.168 C
-8011.5713 8258.3555 -8011.4575 8258.6162 -8011.0098 8258.3965 C
-8011.0435 8258.5488 L
-8010.5186 8258.1191 -8009.9102 8258.3496 -8009.4673 8257.8535 C
-8006.5728 8257.7637 -8003.7983 8257.4883 -8000.9761 8257.4307 C
-7998.1865 8257.5254 -7995.4551 8257.3027 -7992.6221 8257.5664 C
-7991.9585 8257.9658 -7991.9087 8257.9551 -7991.1797 8257.793 C
-7991.2095 8257.8574 -7991.2549 8257.873 -7991.2061 8257.9336 C
-7991.1699 8257.6055 -7990.6929 8257.9023 -7990.6235 8257.5898 C
-7989.5762 8257.6504 -7988.6113 8257.5605 -7987.5337 8257.5586 C
-7987.7041 8257.5938 -7987.7896 8257.8613 -7987.5869 8257.8398 C
-7987.3755 8257.6309 L
-7987.3408 8257.7227 L
-7987.2021 8257.6738 -7987.0513 8257.5117 -7987.1943 8257.4063 C
-7984.4873 8257.123 -7981.8242 8257.7813 -7979.1729 8257.7002 C
-7978.5435 8257.8369 -7977.6475 8257.7119 -7976.9629 8257.6445 C
-7974.9355 8258.082 -7973.1079 8258.4346 -7971.0479 8258.1289 C
-7971.3169 8258.9766 -7972.1675 8259.1719 V
f
-8062.2578 8258.9727 m
-8062.1855 8259.1367 -8061.9497 8259.2266 -8062.1377 8259.4453 C
-8062.1611 8259.291 -8062.2822 8259.1191 -8062.2578 8258.9727 C
f
-8055.9619 8260.6602 m
-8055.9536 8260.6113 -8055.8721 8260.7266 -8055.8521 8260.7529 C
-8055.9297 8260.7656 -8056.0024 8260.9033 -8056.0645 8260.8184 C
-8055.9854 8260.8066 -8055.9976 8260.7285 -8055.9619 8260.6602 C
f
-8054.3521 8260.7578 m
-8054.3765 8260.9033 -8054.7207 8261.0195 -8054.9238 8261.0371 C
-8054.3521 8260.7578 L
f
-8052.8521 8261.3594 m
-8052.7227 8261.4824 -8052.7583 8261.5498 -8052.9326 8261.5459 C
-8052.9453 8261.4688 -8052.8877 8261.4297 -8052.8521 8261.3594 C
f
-8052.7456 8261.0273 m
-8052.6211 8261.0234 -8052.5591 8261.1094 -8052.4985 8261.1934 C
-8052.5029 8261.0674 -8052.7871 8261.2715 -8052.7456 8261.0273 C
f
-8049.4893 8261.4512 m
-8049.4111 8261.4395 -8049.2417 8261.3184 -8049.1689 8261.4805 C
-8049.2505 8261.3672 -8049.5498 8261.665 -8049.4893 8261.4512 C
f
-8047.9761 8261.2305 m
-8047.9272 8261.2402 -8047.9072 8261.2666 -8047.8506 8261.2266 C
-8047.7607 8261.293 -8047.8555 8261.3994 -8047.9312 8261.4131 C
-8047.9761 8261.2305 L
f
-8020.4287 8260.6445 m
-8020.5923 8260.7168 L
-8020.5684 8260.5723 L
-8020.4287 8260.6445 L
f
-8008.3574 8260.6367 m
-8008.1943 8260.5449 -8008.2441 8260.7734 -8008.2168 8260.7949 C
-8008.3643 8260.8105 -8008.1621 8260.6152 -8008.3574 8260.6367 C
f
-8001.8486 8259.9082 m
-8001.8984 8259.9121 L
-8001.8818 8259.6133 L
-8001.8486 8259.9082 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8036.9727 8261.7305 m
-8036.9727 8235.7021 L
-8063 8235.7021 L
-8063 8261.7305 L
-8036.9727 8261.7305 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-8063 8244.377 m
-8036.9727 8244.377 l
S
0.64 0.650477 0.701045 0.510735 K
-8063 8253.0547 m
-8036.9727 8253.0547 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8063 8248.7158 m
-8036.9727 8248.7158 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-8041.5742 8248.7422 m
-8041.3442 8248.4707 -8041.6914 8248.1846 -8042 8247.9736 c
-8042.1118 8247.8965 -8042.5215 8248.1094 -8042.7466 8247.9434 c
-8043.0439 8247.7256 -8043.1826 8247.6387 -8043.4824 8247.6445 c
-8043.6455 8247.6484 -8044.0435 8247.7783 -8044.1895 8247.8086 c
-8044.5679 8247.8848 -8044.8022 8248.082 -8045.3672 8247.9854 c
-8045.7344 8247.9219 -8045.8286 8247.8311 -8045.9233 8247.8789 c
-8046.1118 8248.0205 -8046.2202 8248.2441 -8046.4258 8248.293 c
-8046.9575 8248.4199 -8047.3535 8248.4639 -8047.8818 8248.4531 c
-8048.3047 8248.4434 -8049.4185 8248.5117 -8050.2866 8248.4121 c
-8050.6226 8248.3721 -8050.6025 8247.9473 -8050.7695 8247.9434 c
-8050.8618 8247.9414 -8050.7646 8248.2568 -8050.8306 8248.2773 c
-8051.1694 8248.3838 -8051.4702 8247.2334 -8051.6943 8247.3027 c
-8051.8047 8247.3379 -8051.5562 8247.8838 -8051.6729 8247.9121 c
-8051.8975 8247.9678 -8052.2178 8246.9492 -8052.4321 8247.0117 c
-8052.5635 8247.0488 -8052.2886 8247.4688 -8052.4375 8247.5371 c
-8052.6655 8247.6416 -8052.9087 8246.7656 -8053.1064 8246.8643 C
-8053.1543 8246.9121 -8052.7295 8247.668 -8053.1685 8247.6094 c
-8053.2871 8247.5918 -8053.5054 8247.0439 -8053.5801 8247.0703 c
-8053.6919 8247.1104 -8053.3535 8247.5322 -8053.4897 8247.6582 C
-8053.7681 8247.8848 -8054.3711 8246.8936 -8054.4575 8246.9648 c
-8054.5791 8247.0664 -8054.1279 8247.8281 -8054.2695 8247.8965 C
-8054.4497 8248.1602 -8055.0142 8247.2832 -8055.0889 8247.332 c
-8055.1777 8247.3906 -8054.9058 8247.7686 -8054.8799 8247.9639 c
-8054.8545 8248.1582 -8054.9966 8248.292 -8055.2144 8248.2402 c
-8055.4736 8248.1777 -8055.8696 8247.3721 -8055.9727 8247.4658 C
-8056.0791 8247.5215 -8055.8682 8247.8086 -8055.7954 8248.043 c
-8055.7583 8248.1582 -8055.8882 8248.332 -8056.0298 8248.332 c
-8056.3135 8248.3799 -8056.6255 8247.7285 -8056.7065 8247.833 c
-8056.7524 8247.8926 -8056.5898 8248.2207 -8056.7295 8248.3184 c
-8056.8994 8248.4365 -8057.3115 8247.9688 -8057.4521 8248.0234 C
-8057.5361 8248.0723 -8057.4126 8248.3271 -8057.4927 8248.3838 c
-8057.7295 8248.5498 -8058.0039 8248.1514 -8058.0513 8248.1992 C
-8058.1167 8248.2217 -8058.1201 8248.2666 -8058.2793 8248.3711 c
-8058.4736 8248.498 -8058.5254 8248.5791 -8058.5425 8248.6953 c
-8058.5654 8248.8135 -8058.3135 8249.1055 -8058.1655 8249.0801 c
-8057.8223 8249.0205 -8057.8662 8249.5801 -8057.6328 8249.4463 c
-8057.5679 8249.4102 -8057.6592 8248.9893 -8057.4199 8248.9961 c
-8057.0488 8249.0088 -8056.9858 8249.5518 -8056.7817 8249.541 c
-8056.6406 8249.5342 -8056.8521 8248.9141 -8056.6328 8248.9912 c
-8056.4751 8249.0469 -8056.0063 8250.0322 -8055.9795 8249.9404 c
-8055.8975 8249.6729 -8056.0703 8249.1289 -8055.9409 8249.1387 c
-8055.7568 8249.1533 -8055.5078 8250.0479 -8055.2544 8250.168 c
-8055.1826 8250.2031 -8055.3774 8249.3311 -8055.1958 8249.3271 C
-8055.0898 8249.377 -8054.7578 8250.1797 -8054.6274 8250.2285 C
-8054.5591 8250.2129 -8054.5879 8249.8555 -8054.5176 8249.835 c
-8054.4688 8249.8203 -8054.2817 8250.2959 -8054.21 8250.2539 c
-8054.1055 8250.1934 -8054.2471 8249.7227 -8054.0889 8249.6533 c
-8053.9175 8249.5791 -8053.4878 8250.623 -8053.3486 8250.5283 c
-8053.2769 8250.4805 -8053.3574 8249.9404 -8053.21 8249.9766 c
-8053.0718 8250.0088 -8052.9414 8250.3447 -8052.8081 8250.373 c
-8052.7295 8250.3887 -8052.7935 8249.9219 -8052.7495 8249.9043 c
-8052.5889 8249.8457 -8052.2329 8250.4023 -8052.0688 8250.2539 c
-8051.8584 8250.0654 -8051.9395 8249.7002 -8051.8345 8249.7129 c
-8051.6274 8249.7363 -8051.4912 8249.9736 -8051.4146 8249.9141 c
-8051.2642 8249.7988 -8051.3281 8249.5098 -8051.0527 8249.4229 c
-8050.8975 8249.373 -8050.7935 8249.665 -8050.7495 8249.6611 c
-8050.6738 8249.6582 -8050.6782 8249.5605 -8050.6665 8249.4551 c
-8050.6328 8249.1914 -8050.6064 8249.1299 -8050.4878 8249.1074 c
-8050.0854 8249.084 -8049.5625 8249.0146 -8049.1807 8249.0059 c
-8048.6274 8248.9912 -8047.2607 8248.9678 -8047.1182 8248.9678 c
-8047 8248.9434 -8046.7432 8249.125 -8046.6689 8249.1914 c
-8046.4678 8249.376 -8046.2998 8249.5898 -8045.9858 8249.8506 c
-8045.8906 8249.9316 -8045.8081 8249.9111 -8045.7378 8249.8867 c
-8045.5249 8249.8154 -8045.4585 8249.7637 -8045.2202 8249.7324 c
-8044.9175 8249.6895 -8044.4272 8249.7793 -8044.1245 8249.873 c
-8043.6035 8250.0322 -8043.5264 8250.0547 -8043.0977 8250.0059 c
-8042.6992 8249.96 -8042.0586 8249.8887 -8042.0479 8249.541 c
-8042.0415 8249.3262 -8041.9414 8249.1738 -8041.5742 8248.7422 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8036.9722 8261.7305 m
-8036.9722 8235.7031 L
-8063 8235.7031 L
-8063 8261.7305 L
-8036.9722 8261.7305 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8045.6455 8248.7197 m
-8036.9736 8248.7197 l
S
-8049.9839 8261.7305 m
-8049.9839 8253.0547 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-8045.7202 8244.3809 m
-8036.9727 8244.3809 l
S
-8054.3232 8261.7295 m
-8054.3232 8252.376 l
S
0.64 0.650477 0.701045 0.510735 K
-8045.6504 8261.7295 m
-8045.6504 8259.3174 l
-8042.9937 8259.0938 -8041.3096 8257.3906 v
-8039.6064 8255.6641 -8039.3774 8253.0586 y
-8036.9727 8253.0586 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-8053.8418 8245.916 m
-8053.8418 8245.9805 -8053.8218 8246.0215 -8053.7783 8246.0215 c
-8053.6943 8246.0215 -8053.4634 8245.6846 -8053.3994 8245.6846 c
-8053.3154 8245.6846 -8053.2729 8245.7266 -8053.2729 8245.832 c
-8053.2729 8245.916 -8053.5264 8246.8232 y
-8053.5264 8246.8643 -8053.5264 8246.8643 -8053.5049 8246.8643 c
-8053.4414 8246.8643 -8053.0615 8246.3174 -8052.9351 8246.3174 c
-8052.9146 8246.3174 -8052.8936 8246.3379 -8052.8936 8246.3594 c
-8053.1675 8247.2656 -8053.1675 8247.4561 v
-8053.1675 8247.5195 -8053.1675 8247.541 -8053.1465 8247.541 c
-8053.1055 8247.541 -8052.6826 8246.9707 -8052.5562 8246.9707 c
-8052.5352 8246.9707 -8052.5137 8246.9912 -8052.5137 8247.0127 c
-8052.5137 8247.0762 -8052.7666 8247.8145 -8052.7666 8247.9824 c
-8052.7666 8248.0254 -8052.7666 8248.0254 -8052.7446 8248.0254 c
-8052.6826 8248.0254 -8052.4722 8247.8145 -8052.4297 8247.8145 c
-8052.4082 8247.8145 -8052.3882 8247.8359 -8052.3882 8247.8564 c
-8052.3882 8247.877 -8052.4927 8248.2363 -8052.4927 8248.3203 c
-8052.4927 8248.3418 -8052.4927 8248.3418 -8052.4722 8248.3418 c
-8052.4297 8248.3418 -8052.0918 8247.9824 -8052.0078 8247.9824 c
-8051.9658 8247.9824 -8051.9233 8248.0254 -8051.9233 8248.1094 c
-8051.9233 8248.2578 -8052.1138 8248.9746 -8052.1138 8249.0166 c
-8052.1138 8249.1006 -8052.0918 8249.1426 -8052.0498 8249.1426 c
-8051.9658 8249.1426 -8051.7119 8248.8262 -8051.6494 8248.8262 c
-8051.5854 8248.8262 -8051.5439 8248.8467 -8051.5439 8248.9111 c
-8051.5854 8249.332 L
-8051.5854 8249.3965 -8051.5854 8249.416 -8051.5654 8249.416 c
-8051.5225 8249.416 -8051.2915 8249.1221 -8051.2065 8249.1221 c
-8051.1006 8249.1221 -8051.1006 8249.6074 -8051.1006 8249.6699 c
-8051.1006 8249.7754 -8051.0166 8249.8594 -8050.8896 8249.8594 c
-8050.8057 8249.8594 -8050.4678 8249.6279 -8050.4473 8249.6279 c
-8050.3623 8249.6279 -8050.3198 8250.0703 -8050.2568 8250.0703 c
-8050.1943 8250.0703 -8049.9199 8249.9434 -8049.8564 8249.9434 c
-8049.6455 8249.9434 -8049.6035 8250.0293 -8049.6035 8250.1973 c
-8049.6255 8250.3447 L
-8049.6255 8250.3867 -8049.6035 8250.3867 -8049.5835 8250.3867 c
-8049.4985 8250.3867 -8049.2241 8250.1123 -8049.1392 8250.1123 c
-8048.9287 8250.1123 -8046.8198 8252.1797 -8046.5454 8252.4531 c
-8046.3984 8252.6211 -8046.3984 8252.917 -8046.3984 8253.0439 c
-8046.3984 8253.9082 -8046.3984 8253.9922 -8046.2295 8254.0762 c
-8045.5977 8254.3301 -8045.5127 8254.4775 -8044.7334 8255.7637 c
-8044.6479 8255.9111 -8043.7407 8256.5234 -8043.5942 8256.5234 c
-8043.4878 8256.5234 -8043.1094 8256.2695 -8043.0239 8256.2695 c
-8042.9194 8256.2695 -8042.8135 8256.333 -8042.8135 8256.501 c
-8042.8135 8256.9443 -8043.3408 8257.4512 -8043.9312 8257.4512 c
-8044.7534 8257.4512 -8045.0913 8256.7539 -8045.1338 8256.3555 c
-8045.1543 8256.207 -8045.2393 8256.1221 -8045.3447 8256.1221 c
-8045.3862 8256.1221 -8045.4287 8256.1426 -8045.4702 8256.207 c
-8045.9561 8257.0078 -8046.9473 8257.4512 -8047.7065 8257.4512 c
-8048.7393 8257.4512 -8049.8774 8256.8184 -8050.3418 8256.5449 c
-8050.7842 8256.292 -8051.4814 8256.1221 -8051.8809 8256.1221 c
-8052.3242 8256.1221 -8052.3662 8256.2695 -8052.3662 8256.5234 c
-8052.3662 8256.6709 -8051.9023 8257.1123 -8051.9023 8257.2402 c
-8051.9023 8257.3662 -8052.0498 8257.4512 -8052.4082 8257.4512 c
-8052.8936 8257.4512 -8053.5679 8256.7334 -8053.5679 8255.9541 c
-8053.5679 8255.3418 -8052.7666 8254.8154 -8052.3022 8254.8154 c
-8051.3755 8254.8154 -8051.0942 8255.1738 -8050.5264 8255.6377 c
-8050.4414 8255.7002 -8050.3774 8255.7227 -8050.3359 8255.7227 c
-8050.1895 8255.7227 -8050.1895 8254.625 -8050.1895 8254.5 c
-8050.1895 8254.3506 -8050.2729 8254.2881 -8050.3774 8254.2881 c
-8052.7822 8254.2881 -8057.6592 8253.0645 -8059.3672 8246.9082 c
-8059.4297 8246.6963 -8059.5361 8246.5918 -8059.6406 8246.5918 c
-8059.7881 8246.5918 -8060.7793 8247.4346 -8060.7793 8249.0166 c
-8060.7793 8250.8506 -8059.5767 8251.8203 -8058.9873 8251.8203 c
-8058.8398 8251.8203 -8058.6494 8251.7998 -8058.6494 8251.6514 c
-8058.6494 8251.5889 -8058.6929 8251.5254 -8058.7759 8251.4199 c
-8059.1143 8251.084 -8059.3672 8250.4502 -8059.3672 8250.1338 c
-8059.3672 8249.9219 -8059.2607 8249.7539 -8059.1143 8249.7539 c
-8058.9033 8249.7539 -8058.5654 8250.7031 -8058.46 8250.8506 c
-8058.3335 8251.0615 -8057.9546 8251.4414 -8057.2378 8251.9688 c
-8056.4995 8252.4941 -8055.0654 8253.8027 -8055.0654 8255.0674 c
-8055.0654 8256.4395 -8056.1191 8257.3457 -8056.9209 8257.3457 c
-8057.7007 8257.3457 -8058.6714 8256.8184 -8059.0713 8256.333 c
-8059.7041 8255.5957 -8060.3154 8255.0254 -8060.8218 8255.0254 c
-8061.1592 8255.0254 -8061.3066 8255.2363 -8061.3066 8255.4473 c
-8061.3066 8255.7842 -8061.0537 8256.0166 -8060.5479 8256.0586 c
-8059.9575 8256.1016 -8059.8936 8256.5234 -8059.8936 8256.8594 c
-8059.8936 8257.1338 -8060.4209 8257.4512 -8060.8433 8257.4512 c
-8061.4751 8257.4512 -8062.2974 8256.7539 -8062.2974 8254.9209 c
-8062.2974 8253.4229 -8061.0537 8252.96 -8060.5679 8252.96 c
-8060.1265 8252.96 -8059.4722 8253.0439 -8059.0928 8253.3809 c
-8057.8066 8254.584 -8057.1318 8254.793 -8056.5835 8254.793 c
-8056.3721 8254.793 -8056.2881 8254.793 -8056.2881 8254.9414 c
-8056.2881 8255.2578 -8057.0474 8255.4473 -8057.1318 8255.4688 c
-8057.3423 8255.5313 -8057.5103 8255.7637 -8057.5103 8255.9746 c
-8057.5103 8256.46 -8057.2378 8256.4805 -8056.8774 8256.4805 c
-8056.5215 8256.4805 -8055.8042 8256.1221 -8055.8042 8254.9209 c
-8055.8042 8253.9297 -8056.9424 8252.7695 -8057.4058 8252.5381 c
-8057.7007 8252.3682 -8058.5874 8252.3906 -8058.9458 8252.3477 c
-8059.6406 8252.2627 -8061.4121 8251.3154 -8061.4121 8248.8262 c
-8061.4336 8247.4131 -8060.1265 8246.0859 -8059.8511 8245.8965 c
-8059.6826 8245.7891 -8059.5986 8245.6631 -8059.5986 8245.4941 c
-8059.5986 8245.2832 -8059.6626 8242.3525 -8059.9995 8242.3525 c
-8060.4424 8242.3525 -8060.5054 8242.3525 -8060.5054 8242.5439 c
-8060.21 8243.6387 -8060.21 8243.8711 v
-8060.21 8244.1875 -8060.4424 8245.6631 -8061.3066 8245.6631 c
-8061.5806 8245.6631 -8062.0449 8245.4307 -8062.0449 8245.1152 c
-8062.0449 8244.8203 -8061.3486 8243.6182 -8061.3486 8243.3438 c
-8061.3486 8242.8584 -8061.3921 8242.8379 -8062.0654 8242.2266 c
-8062.2559 8242.0791 -8062.3193 8241.9531 -8062.3193 8241.7617 c
-8062.3193 8241.5938 -8062.2134 8241.4658 -8062.0449 8241.4658 c
-8061.8975 8241.4658 -8061.3281 8241.7422 -8061.2017 8241.7617 c
-8061.0752 8241.7617 -8060.8433 8241.7832 -8060.6538 8241.7832 c
-8060.2734 8241.7832 -8060.0845 8241.6563 -8060.0845 8241.5303 c
-8060.0845 8241.2979 -8060.0845 8240.624 -8060.9263 8239.168 c
-8061.1167 8238.8311 -8062.2974 8237.5029 -8062.2974 8237.165 c
-8062.2974 8236.9961 -8062.2134 8236.9766 -8062.1089 8236.9766 c
-8061.9185 8236.9766 -8061.4966 8237.3975 -8061.3706 8237.5449 c
-8060.1265 8238.873 -8059.3042 8240.3066 -8058.9238 8241.5723 c
-8058.8398 8241.8887 -8058.7344 8241.8047 -8058.5654 8241.8262 c
-8056.4155 8242.332 -8054.3271 8244.8408 -8054.3271 8244.8623 c
-8054.4326 8245.1357 -8054.4326 8245.1992 v
-8054.4326 8245.3262 -8054.3271 8245.3477 -8054.3057 8245.3477 c
-8054.2432 8245.3477 -8054.0527 8245.1357 -8054.0103 8245.1357 c
-8053.9058 8245.1357 -8053.7783 8245.2207 -8053.7783 8245.3682 C
-8053.8418 8245.916 l
f
0 D
-8057.1104 8244.4199 m
-8056.5215 8244.4199 -8056.0986 8244.5254 -8055.6982 8244.7988 c
-8055.6553 8244.8203 -8055.6138 8244.8408 -8055.5928 8244.8408 c
-8055.5498 8244.8408 -8055.5498 8244.8203 -8055.5498 8244.7773 c
-8055.5498 8244.3564 -8057.4272 8242.3965 -8058.5654 8242.3965 c
-8058.6289 8242.3965 -8058.6714 8242.4375 -8058.6714 8242.5 c
-8058.6714 8242.6904 -8058.5874 8244.6934 -8058.2495 8244.6934 c
-8058.1865 8244.6934 -8058.1016 8244.6719 -8058.0386 8244.6309 c
-8057.7007 8244.4824 -8057.4902 8244.4199 -8057.1104 8244.4199 c
f
-8056.5835 8247.1816 m
-8056.5835 8246.7598 -8056.5625 8246.2959 -8055.8662 8246.2959 c
-8055.2334 8246.2959 -8054.6431 8246.9502 -8054.4961 8247.0977 c
-8054.4326 8247.1396 -8054.3906 8247.1602 -8054.3486 8247.1602 c
-8054.3271 8247.1602 -8054.2847 8247.1182 -8054.2847 8247.0762 c
-8054.2847 8246.6328 -8055.6553 8244.9678 -8057.0049 8244.9678 c
-8057.2578 8244.9678 -8058.2705 8245.1357 -8058.2705 8245.6846 c
-8058.2705 8245.9375 -8057.8906 8247.3086 -8057.2793 8248.3838 c
-8055.9087 8250.8721 -8051.7119 8252.4307 -8049.8145 8252.4307 c
-8048.9072 8252.4531 -8048.6118 8252.1367 -8048.4863 8252.1152 c
-8048.4648 8252.1152 -8048.4438 8252.0947 -8048.4233 8252.0947 c
-8048.3174 8252.0947 -8048.1904 8252.1582 -8048.1904 8252.3057 c
-8048.1904 8252.3271 -8048.2119 8252.3271 v
-8048.3594 8253.4648 -8048.4014 8253.8662 -8048.4014 8255.1299 c
-8048.4014 8256.5234 -8048.4014 8256.6494 -8047.4321 8256.6494 c
-8046.1455 8256.6494 -8045.8506 8255.5742 -8045.8506 8255.3418 c
-8045.8506 8254.9209 -8046.4399 8254.625 -8046.5889 8254.625 c
-8046.7358 8254.625 -8046.9058 8254.7324 -8046.9058 8254.9209 c
-8046.9058 8255.2158 -8046.9473 8255.3633 -8047.2207 8255.3633 c
-8047.4951 8255.3633 -8047.4951 8255.0049 -8047.4951 8254.8984 c
-8047.4951 8254.6465 -8047.3896 8254.3936 -8047.1782 8254.2666 c
-8046.7998 8254.0137 -8046.7998 8253.6133 -8046.7998 8253.4023 c
-8046.7998 8253.2969 -8046.7998 8253.1699 -8046.8198 8253.0645 c
-8046.8418 8252.8965 -8048.7817 8250.8506 -8049.0977 8250.8506 c
-8049.2446 8250.8506 -8049.5615 8250.9971 -8050.4258 8250.9971 c
-8052.5767 8250.9971 -8053.5474 8249.2695 -8053.7378 8248.7422 c
-8053.9897 8248.0254 -8054.7915 8247.7295 -8055.0225 8247.7295 c
-8055.2129 8247.7295 -8055.2129 8247.7725 -8055.2129 8248.1729 c
-8055.2129 8248.2578 -8055.4238 8248.5938 y
-8055.4238 8248.7842 -8054.3906 8249.0371 -8054.3906 8249.2266 c
-8054.3906 8249.3965 -8054.5801 8249.416 -8054.7271 8249.416 c
-8054.8115 8249.416 -8055.8882 8249.416 -8056.3306 8248.5938 c
-8056.5415 8248.1934 -8056.5835 8247.625 -8056.5835 8247.1816 c
f
1 D
-8052.4927 8244.9258 m
-8052.4927 8244.8818 -8052.5137 8244.8623 -8052.5352 8244.8623 c
-8052.5986 8244.8623 -8052.7666 8245.1992 -8052.8506 8245.1992 c
-8052.9146 8245.1992 -8052.9995 8245.1152 -8053.0415 8245.0088 c
-8053.0615 8244.9258 -8053.1255 8244.4609 -8053.21 8244.4609 c
-8053.2524 8244.4609 -8053.4209 8244.6934 -8053.4634 8244.6934 c
-8053.6104 8244.6934 -8053.7158 8244.4609 -8053.7158 8244.252 c
-8053.7158 8244.1455 -8053.7783 8244.1455 -8053.9263 8244.1455 c
-8054.5166 8244.1455 -8056.1406 8241.9736 -8056.5625 8240.2227 c
-8056.6055 8240.0547 -8056.5835 8239.9072 -8056.8994 8239.8008 c
-8059.0713 8239.0645 -8061.5176 8236.9121 -8061.5176 8236.7861 c
-8061.5176 8236.6387 -8061.4336 8236.5547 -8061.3066 8236.5547 c
-8061.2432 8236.5547 -8061.1592 8236.5547 -8060.6538 8236.8906 c
-8059.7681 8237.4814 -8057.7217 8238.7686 -8056.8994 8238.7686 c
-8056.6265 8238.7686 -8056.6055 8238.4102 -8056.6055 8238.1563 c
-8056.6055 8237.9658 -8056.6265 8237.7344 -8056.6265 8237.5879 c
-8056.6465 8237.3135 -8056.9634 8236.9961 -8056.9634 8236.8281 c
-8056.9634 8236.6807 -8056.8154 8236.5752 -8056.6465 8236.5752 c
-8056.4575 8236.5752 -8056.3306 8236.5967 -8056.1606 8236.7861 c
-8055.8662 8237.123 -8055.7402 8237.2715 -8055.4238 8237.2715 c
-8055.1914 8237.2715 -8054.1377 8236.5547 -8053.8838 8236.5547 c
-8053.5679 8236.5547 -8053.1895 8237.0391 -8053.1895 8237.335 c
-8053.1895 8238.0723 -8054.0942 8238.6631 -8054.6431 8238.6631 c
-8055.0225 8238.6631 -8055.4438 8238.5371 -8055.6353 8238.3047 c
-8055.6982 8238.2402 -8055.7607 8238.1992 -8055.8242 8238.1992 c
-8055.9937 8238.1992 -8056.1191 8238.6631 -8056.1191 8238.7051 c
-8056.1191 8239.1279 -8053.2729 8239.1895 -8052.9146 8239.1895 c
-8052.7666 8239.1895 -8052.6401 8239.1055 -8052.5352 8238.9365 c
-8052.3447 8238.6426 -8051.1855 8237.4199 -8049.6255 8237.4199 c
-8047.79 8237.4199 -8046.0825 8238.6826 -8046.0825 8240.5811 c
-8046.0825 8240.6875 -8046.1245 8241.2344 -8046.1245 8241.2568 c
-8046.1245 8241.3203 -8045.0063 8243.0693 -8043.6782 8243.0693 c
-8042.6245 8243.0693 -8042.2656 8242.4805 -8042.2656 8241.9941 c
-8042.2656 8241.7617 -8042.3711 8241.1094 -8042.8984 8241.1094 c
-8043.1094 8241.1094 -8043.2144 8241.3203 -8043.2144 8241.6992 c
-8043.2144 8241.7832 -8043.0039 8242.1631 -8043.0039 8242.2686 c
-8043.0039 8242.3105 -8043.0239 8242.332 -8043.0879 8242.332 c
-8043.4258 8242.332 -8043.9521 8241.9736 -8044.1846 8241.3203 c
-8044.4595 8240.6035 -8044.8594 8239.9072 -8045.1958 8239.5059 c
-8045.5127 8239.1484 -8045.6182 8238.5566 -8045.6182 8238.2197 c
-8045.6182 8237.7344 -8045.1338 8236.5752 -8043.4878 8236.5752 c
-8042.2871 8236.5752 -8041.4434 8237.3135 -8041.4434 8237.9248 c
-8041.4434 8238.5371 -8041.7598 8238.916 -8042.2026 8238.916 c
-8042.6455 8238.916 -8042.9824 8238.5781 -8042.9824 8238.2402 c
-8042.9824 8237.5664 -8043.1514 8237.4199 -8043.4878 8237.4199 c
-8043.6992 8237.4199 -8043.8896 8237.5449 -8043.8896 8237.8613 c
-8043.8896 8238.0938 -8043.8896 8238.4727 -8042.3711 8239.7383 c
-8041.8857 8240.1387 -8041.4214 8240.8359 -8041.4214 8241.6152 c
-8041.4214 8242.375 -8042.4561 8243.5752 -8043.6362 8243.5752 c
-8044.8594 8243.5752 -8045.6401 8242.7959 -8046.2515 8242.0791 c
-8046.5454 8241.7422 -8047.9814 8240.0547 -8048.0439 8240.0322 c
-8048.2334 8239.8848 -8048.3174 8239.7598 -8048.3174 8239.6328 c
-8048.3174 8239.5273 -8048.2119 8239.4219 -8048.0854 8239.4219 c
-8047.8535 8239.4219 -8046.9058 8240.3711 -8046.8198 8240.3711 c
-8046.7568 8240.3711 -8046.7153 8240.3066 -8046.7153 8240.2227 c
-8046.7153 8239.4639 -8047.8535 8237.9883 -8049.6255 8237.9883 c
-8051.1006 8237.9883 -8051.9863 8239.1055 -8051.9863 8239.1484 c
-8051.9863 8239.2744 -8051.8394 8239.3994 -8051.5225 8239.4639 c
-8047.6426 8240.2021 -8044.3955 8243.752 -8044.3955 8248.3682 c
-8044.3955 8248.4746 -8044.2256 8248.501 -8044.0786 8248.501 c
-8043.7202 8248.501 -8043.0879 8248.5801 -8043.0879 8248.3066 c
-8043.0879 8248.2002 -8043.1294 8248.0742 -8043.1934 8247.9473 c
-8043.5518 8247.377 -8043.8682 8247.2031 -8043.8682 8246.252 c
-8043.8682 8245.7891 -8043.4878 8245.2627 -8042.8984 8245.2627 c
-8041.8657 8245.2627 -8041.4214 8246.2959 -8041.4214 8246.5273 c
-8041.4214 8246.6963 -8041.5073 8246.7598 -8041.5903 8246.7598 c
-8041.7178 8246.7598 -8042.2241 8246.2324 -8042.3711 8246.2324 c
-8042.5615 8246.2324 -8042.7085 8246.2744 -8042.7085 8246.7598 c
-8042.7085 8247.0977 -8041.4214 8250.8086 -8041.4214 8251.6094 c
-8041.4214 8252.1797 -8041.7598 8252.876 -8042.6455 8253.3809 c
-8042.6875 8253.4023 -8042.7085 8253.4229 -8042.7085 8253.4648 c
-8042.7085 8253.5488 -8042.5615 8253.6553 -8042.4126 8253.6963 c
-8041.8018 8253.8662 -8041.4214 8253.9717 -8041.4214 8254.9209 c
-8041.4214 8255.2793 -8041.7598 8255.9541 -8042.0127 8255.9541 c
-8042.2026 8255.9541 -8042.2026 8255.9111 -8042.2026 8255.5527 c
-8042.2026 8255.4053 -8042.2446 8255.2998 -8042.3926 8255.1943 c
-8042.7085 8254.9834 -8042.7295 8254.9414 -8042.8135 8254.457 c
-8042.8774 8254.1406 -8043.0039 8254.0547 -8044.1426 8253.4229 c
-8044.5854 8253.1494 -8044.6904 8252.917 -8044.7744 8252.6855 c
-8044.8594 8252.4941 -8044.9233 8252.4941 -8045.4287 8252.4941 c
-8045.9561 8252.4941 -8048.5073 8249.7754 -8048.5073 8249.6484 c
-8048.5073 8249.5859 -8048.3809 8249.29 -8048.3809 8249.2266 c
-8048.3809 8249.1641 -8048.4014 8249.1221 -8048.4438 8249.1221 c
-8048.4863 8249.1221 -8048.6338 8249.332 -8048.6758 8249.332 c
-8048.7817 8249.332 -8048.7817 8249.1426 -8048.7817 8248.9941 c
-8048.7817 8248.8906 -8048.5703 8248.3203 -8048.5703 8248.1729 c
-8048.5703 8248.0889 -8048.5918 8248.0254 -8048.6338 8248.0254 c
-8048.7178 8248.0254 -8048.9072 8248.4883 -8048.9922 8248.4883 c
-8049.0342 8248.4883 -8049.0762 8248.4473 -8049.0762 8248.3203 c
-8049.0762 8248.1729 -8048.8862 8247.4561 y
-8048.8862 8247.3926 -8048.9072 8247.2871 -8048.9502 8247.2871 c
-8049.0342 8247.2871 -8049.1826 8247.6875 -8049.2666 8247.6875 c
-8049.3286 8247.6875 -8049.3926 8247.6035 -8049.3926 8247.4561 c
-8049.3926 8247.3711 -8049.2446 8246.9502 -8049.2446 8246.8447 c
-8049.2446 8246.7813 -8049.2666 8246.7168 -8049.3086 8246.7168 c
-8049.3506 8246.7168 -8049.5835 8247.3301 -8049.7095 8247.3301 c
-8049.7935 8247.3301 -8049.8994 8247.2227 -8049.8994 8247.1182 c
-8049.8994 8247.0342 -8049.7729 8246.6758 -8049.7729 8246.5918 c
-8049.7729 8246.5488 -8049.7729 8246.5273 -8049.7935 8246.5273 c
-8049.8774 8246.5273 -8050.0254 8247.0127 -8050.1104 8247.0127 c
-8050.3418 8247.0127 -8050.3623 8246.5918 -8050.3623 8246.4014 c
-8050.3623 8246.3174 -8050.2998 8245.9805 -8050.2998 8245.916 c
-8050.2998 8245.8535 -8050.3198 8245.832 -8050.3418 8245.832 c
-8050.4897 8245.832 -8050.6782 8246.6328 -8050.8271 8246.6328 c
-8051.0386 8246.6328 -8051.0386 8246.4434 -8051.0386 8246.2119 c
-8051.0166 8245.6846 L
-8051.0166 8245.6631 -8051.0386 8245.6426 y
-8051.0586 8245.6426 -8051.1006 8245.6631 -8051.1226 8245.7266 c
-8051.1855 8245.9375 -8051.3115 8246.3594 -8051.5225 8246.3594 c
-8051.6694 8246.3594 -8051.8174 8246.1904 -8051.8174 8246.0439 c
-8051.8174 8245.8105 -8051.7119 8245.4307 -8051.7119 8245.1992 c
-8051.7119 8245.1357 -8051.7334 8245.1152 -8051.7754 8245.1152 c
-8051.8608 8245.1152 -8051.9863 8245.5566 -8052.0278 8245.6426 c
-8052.0918 8245.7266 -8052.1553 8245.748 -8052.2192 8245.748 c
-8052.5352 8245.748 -8052.5352 8245.4307 -8052.5352 8245.2832 C
-8052.4927 8244.9258 l
f
0 D
-8053.8633 8240.5605 m
-8053.8633 8240.3281 -8055.8042 8240.1387 -8055.8662 8240.1387 c
-8055.9722 8240.1387 -8056.0352 8240.2021 -8056.0352 8240.3066 c
-8056.0352 8241.1719 -8054.2847 8243.4072 -8053.8633 8243.4072 c
-8053.7998 8243.4072 -8053.7783 8243.3867 -8053.7783 8243.3232 c
-8054.2002 8242.0791 -8054.2002 8241.8262 v
-8054.2002 8241.4463 -8054.0942 8241.1934 -8053.9058 8240.7715 c
-8053.8838 8240.6875 -8053.8633 8240.624 -8053.8633 8240.5605 c
f
-8045.1338 8252.0098 m
-8044.9858 8252.0098 -8044.4795 8251.5049 -8044.3325 8251.5049 c
-8044.2065 8251.5049 -8044.0791 8251.5889 -8044.0791 8251.7363 c
-8044.0791 8251.8203 -8044.2695 8252.2627 -8044.2695 8252.3682 c
-8044.2695 8252.7266 -8043.8896 8253.0234 -8043.5098 8253.0234 c
-8043.1094 8253.0234 -8041.9702 8252.7061 -8041.9702 8251.4824 c
-8041.9702 8250.3867 -8042.3926 8250.3867 -8044.0366 8250.3867 c
-8044.3955 8250.3867 -8046.0615 8250.5762 -8046.3145 8250.5762 c
-8046.4399 8250.5762 -8046.4834 8250.4072 -8046.4834 8250.2803 c
-8046.4834 8250.2393 -8046.4834 8250.1973 -8046.4614 8250.1758 c
-8046.3984 8249.7969 -8046.1675 8249.248 -8046.1675 8248.8682 c
-8046.1675 8244.4199 -8050.2998 8240.5605 -8052.7666 8240.5605 c
-8053.4209 8240.5605 -8053.6519 8241.3623 -8053.6519 8241.7832 c
-8053.6519 8243.5127 -8051.6694 8244.5449 -8051.4175 8244.5449 c
-8051.3545 8244.5449 -8051.3335 8244.5254 -8051.3335 8244.4824 c
-8051.3335 8244.4404 -8051.3545 8244.3984 -8051.3975 8244.3564 c
-8051.5225 8244.1875 -8052.0498 8243.5752 -8052.0498 8242.9434 c
-8052.0498 8242.6055 -8051.7554 8242.1631 -8050.9951 8242.1631 c
-8049.7305 8242.1631 -8049.1826 8243.5127 -8049.1826 8243.8711 c
-8049.1826 8244.0195 -8049.2446 8244.2295 -8049.4561 8244.2295 c
-8049.6035 8244.2295 -8050.0049 8243.5752 -8050.1519 8243.5752 c
-8050.2158 8243.5752 -8050.4473 8243.7021 -8050.5103 8243.7021 c
-8050.5942 8243.7021 -8050.6582 8243.6816 -8050.7422 8243.6816 c
-8050.8057 8243.6816 -8050.8481 8243.7441 -8050.8481 8243.8496 c
-8050.8481 8244.209 -8050.3623 8244.7773 -8049.8774 8245.0313 c
-8048.9722 8245.4941 -8047.6226 8246.8232 -8047.6226 8248.2783 c
-8047.6226 8248.6992 -8047.6846 8249.1006 -8047.6846 8249.4375 c
-8047.6846 8249.9863 -8046.7568 8250.8506 -8045.8081 8251.7363 c
-8045.6401 8251.8838 -8045.3862 8252.0098 -8045.1338 8252.0098 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8036.9722 8261.7305 m
-8036.9722 8235.7031 L
-8063 8235.7031 L
-8063 8261.7305 L
-8036.9722 8261.7305 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8045.6455 8248.7197 m
-8036.9736 8248.7197 l
S
-8049.9839 8261.7305 m
-8049.9839 8253.0547 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-8045.7202 8244.3809 m
-8036.9727 8244.3809 l
S
-8054.3232 8261.7305 m
-8054.3232 8252.376 l
S
0.7084 0.636438 0.515526 0.381872 K
-8045.6504 8261.7305 m
-8045.6504 8259.3174 l
-8042.9937 8259.0938 -8041.3096 8257.3906 v
-8039.6064 8255.6641 -8039.3774 8253.0586 y
-8036.9727 8253.0586 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-8053.7783 8245.3682 m
-8053.7783 8245.2207 -8053.9058 8245.1357 -8054.0103 8245.1357 c
-8054.0527 8245.1357 -8054.2432 8245.3477 -8054.3057 8245.3477 c
-8054.3271 8245.3477 -8054.4326 8245.3262 -8054.4326 8245.1992 c
-8054.4326 8245.1357 -8054.3271 8244.8623 y
-8054.3271 8244.8408 -8056.4155 8242.332 -8058.5654 8241.8262 c
-8058.7344 8241.8047 -8058.8398 8241.8887 -8058.9238 8241.5723 c
-8059.3042 8240.3066 -8060.1265 8238.873 -8061.3706 8237.5449 c
-8061.4966 8237.3984 -8061.9185 8236.9766 -8062.1089 8236.9766 c
-8062.2134 8236.9766 -8062.2974 8236.9961 -8062.2974 8237.165 c
-8062.2974 8237.5029 -8061.1167 8238.8311 -8060.9263 8239.168 c
-8060.0845 8240.624 -8060.0845 8241.2979 -8060.0845 8241.5303 c
-8060.0845 8241.6563 -8060.2734 8241.7832 -8060.6538 8241.7832 c
-8060.8433 8241.7832 -8061.0752 8241.7617 -8061.2017 8241.7617 c
-8061.3281 8241.7422 -8061.8975 8241.4658 -8062.0449 8241.4658 c
-8062.2134 8241.4658 -8062.3193 8241.5938 -8062.3193 8241.7617 c
-8062.3193 8241.9531 -8062.2559 8242.0791 -8062.0654 8242.2266 c
-8061.3921 8242.8379 -8061.3486 8242.8584 -8061.3486 8243.3438 c
-8061.3486 8243.6182 -8062.0449 8244.8203 -8062.0449 8245.1152 c
-8062.0449 8245.4307 -8061.5806 8245.6631 -8061.3066 8245.6631 c
-8060.4424 8245.6631 -8060.21 8244.1875 -8060.21 8243.8711 c
-8060.21 8243.6387 -8060.5054 8242.5439 y
-8060.5054 8242.3525 -8060.4424 8242.3525 -8059.9995 8242.3525 c
-8059.6626 8242.3525 -8059.5986 8245.2832 -8059.5986 8245.4941 c
-8059.5986 8245.6631 -8059.6826 8245.7891 -8059.8511 8245.8965 c
-8060.1265 8246.0859 -8061.4336 8247.4131 -8061.4121 8248.8262 c
-8061.4121 8251.3154 -8059.6406 8252.2627 -8058.9458 8252.3477 c
-8058.5874 8252.3906 -8057.7007 8252.3682 -8057.4058 8252.5381 c
-8056.9424 8252.7695 -8055.8042 8253.9297 -8055.8042 8254.9209 c
-8055.8042 8256.1221 -8056.5215 8256.4805 -8056.8774 8256.4805 c
-8057.2378 8256.4805 -8057.5103 8256.46 -8057.5103 8255.9746 c
-8057.5103 8255.7637 -8057.3423 8255.5313 -8057.1318 8255.4688 c
-8057.0474 8255.4473 -8056.2881 8255.2578 -8056.2881 8254.9414 c
-8056.2881 8254.793 -8056.3721 8254.793 -8056.5835 8254.793 c
-8057.1318 8254.793 -8057.8066 8254.584 -8059.0928 8253.3809 c
-8059.4722 8253.0439 -8060.1265 8252.96 -8060.5679 8252.96 c
-8061.0537 8252.96 -8062.2974 8253.4229 -8062.2974 8254.9209 c
-8062.2974 8256.7539 -8061.4751 8257.4512 -8060.8433 8257.4512 c
-8060.4209 8257.4512 -8059.8936 8257.1338 -8059.8936 8256.8594 c
-8059.8936 8256.5234 -8059.9575 8256.1016 -8060.5479 8256.0586 c
-8061.0537 8256.0166 -8061.3066 8255.7842 -8061.3066 8255.4473 c
-8061.3066 8255.2363 -8061.1592 8255.0254 -8060.8218 8255.0254 c
-8060.3154 8255.0254 -8059.7041 8255.5957 -8059.0713 8256.333 c
-8058.6714 8256.8184 -8057.7007 8257.3457 -8056.9209 8257.3457 c
-8056.1191 8257.3457 -8055.0654 8256.4395 -8055.0654 8255.0674 c
-8055.0654 8253.8027 -8056.4995 8252.4941 -8057.2378 8251.9688 c
-8057.9546 8251.4414 -8058.3335 8251.0615 -8058.46 8250.8506 c
-8058.5654 8250.7031 -8058.9033 8249.7539 -8059.1143 8249.7539 c
-8059.2607 8249.7539 -8059.3672 8249.9219 -8059.3672 8250.1338 c
-8059.3672 8250.4502 -8059.1143 8251.084 -8058.7759 8251.4199 c
-8058.6929 8251.5254 -8058.6494 8251.5889 -8058.6494 8251.6514 c
-8058.6494 8251.7998 -8058.8398 8251.8203 -8058.9873 8251.8203 c
-8059.5767 8251.8203 -8060.7793 8250.8506 -8060.7793 8249.0166 c
-8060.7793 8247.4346 -8059.7881 8246.5918 -8059.6406 8246.5918 c
-8059.5361 8246.5918 -8059.4297 8246.6963 -8059.3672 8246.9082 c
-8057.6592 8253.0645 -8052.7822 8254.2881 -8050.3774 8254.2881 c
-8050.2729 8254.2881 -8050.1895 8254.3506 -8050.1895 8254.5 c
-8050.1895 8254.625 -8050.1895 8255.7227 -8050.3359 8255.7227 c
-8050.3774 8255.7227 -8050.4414 8255.7002 -8050.5264 8255.6377 c
-8051.0942 8255.1738 -8051.3755 8254.8154 -8052.3022 8254.8154 c
-8052.7666 8254.8154 -8053.5679 8255.3418 -8053.5679 8255.9541 c
-8053.5679 8256.7334 -8052.8936 8257.4512 -8052.4082 8257.4512 c
-8052.0498 8257.4512 -8051.9023 8257.3662 -8051.9023 8257.2402 c
-8051.9023 8257.1123 -8052.3662 8256.6709 -8052.3662 8256.5234 c
-8052.3662 8256.2695 -8052.3242 8256.1221 -8051.8809 8256.1221 c
-8051.4814 8256.1221 -8050.7842 8256.292 -8050.3418 8256.5449 c
-8049.8774 8256.8184 -8048.7393 8257.4512 -8047.7065 8257.4512 c
-8046.9473 8257.4512 -8045.9561 8257.0078 -8045.4702 8256.207 c
-8045.4287 8256.1426 -8045.3862 8256.1221 -8045.3447 8256.1221 c
-8045.2393 8256.1221 -8045.1543 8256.207 -8045.1338 8256.3555 c
-8045.0913 8256.7539 -8044.7534 8257.4512 -8043.9312 8257.4512 c
-8043.3408 8257.4512 -8042.8135 8256.9443 -8042.8135 8256.501 c
-8042.8135 8256.333 -8042.9194 8256.2695 -8043.0239 8256.2695 c
-8043.1094 8256.2695 -8043.4878 8256.5234 -8043.5942 8256.5234 c
-8043.7407 8256.5234 -8044.6479 8255.9111 -8044.7334 8255.7637 c
-8045.5127 8254.4775 -8045.5977 8254.3301 -8046.2295 8254.0762 c
-8046.3984 8253.9922 -8046.3984 8253.9082 -8046.3984 8253.0439 c
-8046.3984 8252.917 -8046.3984 8252.6211 -8046.5454 8252.4531 c
-8046.8198 8252.1797 -8048.9287 8250.1123 -8049.1392 8250.1123 c
-8049.2241 8250.1123 -8049.4985 8250.3867 -8049.5835 8250.3867 c
-8049.6035 8250.3867 -8049.6255 8250.3867 -8049.6255 8250.3447 C
-8049.6035 8250.1973 l
-8049.6035 8250.0293 -8049.6455 8249.9434 -8049.8564 8249.9434 c
-8049.9199 8249.9434 -8050.1943 8250.0703 -8050.2568 8250.0703 c
-8050.3198 8250.0703 -8050.3623 8249.6279 -8050.4473 8249.6279 c
-8050.4678 8249.6279 -8050.8057 8249.8594 -8050.8896 8249.8594 c
-8051.0166 8249.8594 -8051.1006 8249.7754 -8051.1006 8249.6699 c
-8051.1006 8249.6074 -8051.1006 8249.1221 -8051.2065 8249.1221 c
-8051.2915 8249.1221 -8051.5225 8249.416 -8051.5654 8249.416 c
-8051.5854 8249.416 -8051.5854 8249.3965 -8051.5854 8249.332 C
-8051.5439 8248.9111 l
-8051.5439 8248.8467 -8051.5854 8248.8262 -8051.6494 8248.8262 c
-8051.7119 8248.8262 -8051.9658 8249.1426 -8052.0498 8249.1426 c
-8052.0918 8249.1426 -8052.1138 8249.1006 -8052.1138 8249.0166 c
-8052.1138 8248.9746 -8051.9233 8248.2578 -8051.9233 8248.1094 c
-8051.9233 8248.0254 -8051.9658 8247.9824 -8052.0078 8247.9824 c
-8052.0918 8247.9824 -8052.4297 8248.3418 -8052.4722 8248.3418 c
-8052.4927 8248.3418 -8052.4927 8248.3418 -8052.4927 8248.3203 c
-8052.4927 8248.2363 -8052.3882 8247.877 -8052.3882 8247.8574 c
-8052.3882 8247.8359 -8052.4082 8247.8145 -8052.4297 8247.8145 c
-8052.4722 8247.8145 -8052.6826 8248.0254 -8052.7446 8248.0254 c
-8052.7666 8248.0254 -8052.7666 8248.0254 -8052.7666 8247.9824 c
-8052.7666 8247.8145 -8052.5137 8247.0762 -8052.5137 8247.0127 c
-8052.5137 8246.9912 -8052.5352 8246.9707 -8052.5562 8246.9707 c
-8052.6826 8246.9707 -8053.1055 8247.541 -8053.1465 8247.541 c
-8053.1675 8247.541 -8053.1675 8247.5195 -8053.1675 8247.4561 c
-8053.1675 8247.2656 -8052.8936 8246.3594 y
-8052.8936 8246.3379 -8052.9146 8246.3174 -8052.9351 8246.3174 c
-8053.0615 8246.3174 -8053.4414 8246.8643 -8053.5049 8246.8643 c
-8053.5264 8246.8643 -8053.5264 8246.8643 -8053.5264 8246.8232 c
-8053.2729 8245.916 -8053.2729 8245.832 v
-8053.2729 8245.7266 -8053.3154 8245.6846 -8053.3994 8245.6846 c
-8053.4634 8245.6846 -8053.6943 8246.0215 -8053.7783 8246.0215 c
-8053.8218 8246.0215 -8053.8418 8245.9805 -8053.8418 8245.916 c
-8053.7783 8245.3682 L
f
1 D
-8058.0386 8244.6309 m
-8058.1016 8244.6719 -8058.1865 8244.6934 -8058.2495 8244.6934 c
-8058.5874 8244.6934 -8058.6714 8242.6904 -8058.6714 8242.5 c
-8058.6714 8242.4375 -8058.6289 8242.3965 -8058.5654 8242.3965 c
-8057.4272 8242.3965 -8055.5498 8244.3574 -8055.5498 8244.7773 c
-8055.5498 8244.8203 -8055.5498 8244.8408 -8055.5928 8244.8408 c
-8055.6138 8244.8408 -8055.6553 8244.8203 -8055.6982 8244.7988 c
-8056.0986 8244.5254 -8056.5215 8244.4199 -8057.1104 8244.4199 c
-8057.4902 8244.4199 -8057.7007 8244.4824 -8058.0386 8244.6309 c
f
-8056.3306 8248.5938 m
-8055.8882 8249.416 -8054.8115 8249.416 -8054.7271 8249.416 c
-8054.5801 8249.416 -8054.3906 8249.3965 -8054.3906 8249.2266 c
-8054.3906 8249.0371 -8055.4238 8248.7842 -8055.4238 8248.5938 c
-8055.2129 8248.2578 -8055.2129 8248.1729 v
-8055.2129 8247.7734 -8055.2129 8247.7305 -8055.0225 8247.7305 c
-8054.7915 8247.7305 -8053.9897 8248.0254 -8053.7378 8248.7422 c
-8053.5474 8249.2695 -8052.5767 8250.9971 -8050.4258 8250.9971 c
-8049.5615 8250.9971 -8049.2446 8250.8506 -8049.0977 8250.8506 c
-8048.7817 8250.8506 -8046.8418 8252.8965 -8046.8198 8253.0645 c
-8046.7998 8253.1699 -8046.7998 8253.2969 -8046.7998 8253.4023 c
-8046.7998 8253.6133 -8046.7998 8254.0137 -8047.1782 8254.2666 c
-8047.3896 8254.3936 -8047.4951 8254.6465 -8047.4951 8254.8984 c
-8047.4951 8255.0049 -8047.4951 8255.3633 -8047.2207 8255.3633 c
-8046.9473 8255.3633 -8046.9058 8255.2158 -8046.9058 8254.9209 c
-8046.9058 8254.7324 -8046.7358 8254.625 -8046.5889 8254.625 c
-8046.4399 8254.625 -8045.8506 8254.9209 -8045.8506 8255.3418 c
-8045.8506 8255.5742 -8046.1455 8256.6494 -8047.4321 8256.6494 c
-8048.4014 8256.6494 -8048.4014 8256.5234 -8048.4014 8255.1299 c
-8048.4014 8253.8662 -8048.3594 8253.4648 -8048.2119 8252.3271 c
-8048.1904 8252.3271 -8048.1904 8252.3057 y
-8048.1904 8252.1582 -8048.3174 8252.0947 -8048.4233 8252.0947 c
-8048.4438 8252.0947 -8048.4648 8252.1152 -8048.4863 8252.1152 c
-8048.6118 8252.1367 -8048.9072 8252.4531 -8049.8145 8252.4307 c
-8051.7119 8252.4307 -8055.9087 8250.8721 -8057.2793 8248.3838 c
-8057.8906 8247.3086 -8058.2705 8245.9375 -8058.2705 8245.6846 c
-8058.2705 8245.1357 -8057.2578 8244.9678 -8057.0049 8244.9678 c
-8055.6553 8244.9678 -8054.2847 8246.6328 -8054.2847 8247.0762 c
-8054.2847 8247.1182 -8054.3271 8247.1602 -8054.3486 8247.1602 c
-8054.3906 8247.1602 -8054.4326 8247.1396 -8054.4961 8247.0977 c
-8054.6431 8246.9502 -8055.2334 8246.2959 -8055.8662 8246.2959 c
-8056.5625 8246.2959 -8056.5835 8246.7598 -8056.5835 8247.1816 c
-8056.5835 8247.625 -8056.5415 8248.1934 -8056.3306 8248.5938 c
f
0 D
-8052.5352 8245.2832 m
-8052.5352 8245.4307 -8052.5352 8245.748 -8052.2192 8245.748 c
-8052.1553 8245.748 -8052.0918 8245.7266 -8052.0278 8245.6426 c
-8051.9863 8245.5566 -8051.8608 8245.1152 -8051.7754 8245.1152 c
-8051.7334 8245.1152 -8051.7119 8245.1357 -8051.7119 8245.1992 c
-8051.7119 8245.4307 -8051.8174 8245.8105 -8051.8174 8246.0439 c
-8051.8174 8246.1904 -8051.6694 8246.3594 -8051.5225 8246.3594 c
-8051.3115 8246.3594 -8051.1855 8245.9375 -8051.1226 8245.7266 c
-8051.1006 8245.6631 -8051.0586 8245.6426 -8051.0386 8245.6426 c
-8051.0166 8245.6631 -8051.0166 8245.6846 V
-8051.0386 8246.2119 l
-8051.0386 8246.4434 -8051.0386 8246.6328 -8050.8271 8246.6328 c
-8050.6782 8246.6328 -8050.4897 8245.832 -8050.3418 8245.832 c
-8050.3198 8245.832 -8050.2998 8245.8535 -8050.2998 8245.916 c
-8050.2998 8245.9805 -8050.3623 8246.3174 -8050.3623 8246.4014 c
-8050.3623 8246.5918 -8050.3418 8247.0127 -8050.1104 8247.0127 c
-8050.0254 8247.0127 -8049.8774 8246.5273 -8049.7935 8246.5273 c
-8049.7729 8246.5273 -8049.7729 8246.5488 -8049.7729 8246.5918 c
-8049.7729 8246.6758 -8049.8994 8247.0342 -8049.8994 8247.1182 c
-8049.8994 8247.2227 -8049.7935 8247.3301 -8049.7095 8247.3301 c
-8049.5835 8247.3301 -8049.3506 8246.7168 -8049.3086 8246.7168 c
-8049.2666 8246.7168 -8049.2446 8246.7813 -8049.2446 8246.8447 c
-8049.2446 8246.9502 -8049.3926 8247.3711 -8049.3926 8247.4561 c
-8049.3926 8247.6035 -8049.3286 8247.6875 -8049.2666 8247.6875 c
-8049.1826 8247.6875 -8049.0342 8247.2871 -8048.9502 8247.2871 c
-8048.9072 8247.2871 -8048.8862 8247.3926 -8048.8862 8247.4561 c
-8049.0762 8248.1729 -8049.0762 8248.3203 v
-8049.0762 8248.4473 -8049.0342 8248.4883 -8048.9922 8248.4883 c
-8048.9072 8248.4883 -8048.7178 8248.0254 -8048.6338 8248.0254 c
-8048.5918 8248.0254 -8048.5703 8248.0889 -8048.5703 8248.1729 c
-8048.5703 8248.3203 -8048.7817 8248.8906 -8048.7817 8248.9941 c
-8048.7817 8249.1426 -8048.7817 8249.332 -8048.6758 8249.332 c
-8048.6338 8249.332 -8048.4863 8249.1221 -8048.4438 8249.1221 c
-8048.4014 8249.1221 -8048.3809 8249.1641 -8048.3809 8249.2266 c
-8048.3809 8249.29 -8048.5073 8249.5859 -8048.5073 8249.6484 c
-8048.5073 8249.7754 -8045.9561 8252.4941 -8045.4287 8252.4941 c
-8044.9233 8252.4941 -8044.8594 8252.4941 -8044.7744 8252.6855 c
-8044.6904 8252.917 -8044.5854 8253.1494 -8044.1426 8253.4229 c
-8043.0039 8254.0547 -8042.8774 8254.1406 -8042.8135 8254.457 c
-8042.7295 8254.9414 -8042.7085 8254.9834 -8042.3926 8255.1943 c
-8042.2446 8255.2998 -8042.2026 8255.4053 -8042.2026 8255.5527 c
-8042.2026 8255.9111 -8042.2026 8255.9541 -8042.0127 8255.9541 c
-8041.7598 8255.9541 -8041.4214 8255.2793 -8041.4214 8254.9209 c
-8041.4214 8253.9717 -8041.8018 8253.8662 -8042.4126 8253.6963 c
-8042.5615 8253.6553 -8042.7085 8253.5488 -8042.7085 8253.4648 c
-8042.7085 8253.4229 -8042.6875 8253.4023 -8042.6455 8253.3809 c
-8041.7598 8252.876 -8041.4214 8252.1797 -8041.4214 8251.6094 c
-8041.4214 8250.8086 -8042.7085 8247.0977 -8042.7085 8246.7598 c
-8042.7085 8246.2744 -8042.5615 8246.2324 -8042.3711 8246.2324 c
-8042.2241 8246.2324 -8041.7178 8246.7598 -8041.5903 8246.7598 c
-8041.5073 8246.7598 -8041.4214 8246.6963 -8041.4214 8246.5273 c
-8041.4214 8246.2959 -8041.8657 8245.2627 -8042.8984 8245.2627 c
-8043.4878 8245.2627 -8043.8682 8245.7891 -8043.8682 8246.252 c
-8043.8682 8247.2031 -8043.5518 8247.377 -8043.1934 8247.9473 c
-8043.1294 8248.0742 -8043.0879 8248.2002 -8043.0879 8248.3066 c
-8043.0879 8248.5801 -8043.7202 8248.501 -8044.0786 8248.501 c
-8044.2256 8248.501 -8044.3955 8248.4746 -8044.3955 8248.3682 c
-8044.3955 8243.752 -8047.6426 8240.2021 -8051.5225 8239.4639 c
-8051.8394 8239.3994 -8051.9863 8239.2744 -8051.9863 8239.1484 c
-8051.9863 8239.1055 -8051.1006 8237.9883 -8049.6255 8237.9883 c
-8047.8535 8237.9883 -8046.7153 8239.4639 -8046.7153 8240.2227 c
-8046.7153 8240.3066 -8046.7568 8240.3711 -8046.8198 8240.3711 c
-8046.9058 8240.3711 -8047.8535 8239.4219 -8048.0854 8239.4219 c
-8048.2119 8239.4219 -8048.3174 8239.5273 -8048.3174 8239.6328 c
-8048.3174 8239.7598 -8048.2334 8239.8848 -8048.0439 8240.0322 c
-8047.9814 8240.0547 -8046.5454 8241.7422 -8046.2515 8242.0791 c
-8045.6401 8242.7959 -8044.8594 8243.5752 -8043.6362 8243.5752 c
-8042.4561 8243.5752 -8041.4214 8242.375 -8041.4214 8241.6152 c
-8041.4214 8240.8359 -8041.8857 8240.1387 -8042.3711 8239.7383 c
-8043.8896 8238.4727 -8043.8896 8238.0938 -8043.8896 8237.8613 c
-8043.8896 8237.5449 -8043.6992 8237.4199 -8043.4878 8237.4199 c
-8043.1514 8237.4199 -8042.9824 8237.5664 -8042.9824 8238.2402 c
-8042.9824 8238.5781 -8042.6455 8238.916 -8042.2026 8238.916 c
-8041.7598 8238.916 -8041.4434 8238.5371 -8041.4434 8237.9248 c
-8041.4434 8237.3145 -8042.2871 8236.5752 -8043.4878 8236.5752 c
-8045.1338 8236.5752 -8045.6182 8237.7344 -8045.6182 8238.2197 c
-8045.6182 8238.5566 -8045.5127 8239.1484 -8045.1958 8239.5059 c
-8044.8594 8239.9072 -8044.4595 8240.6035 -8044.1846 8241.3203 c
-8043.9521 8241.9736 -8043.4258 8242.332 -8043.0879 8242.332 c
-8043.0239 8242.332 -8043.0039 8242.3105 -8043.0039 8242.2686 c
-8043.0039 8242.1631 -8043.2144 8241.7832 -8043.2144 8241.6992 c
-8043.2144 8241.3203 -8043.1094 8241.1094 -8042.8984 8241.1094 c
-8042.3711 8241.1094 -8042.2656 8241.7617 -8042.2656 8241.9941 c
-8042.2656 8242.4805 -8042.6245 8243.0693 -8043.6782 8243.0693 c
-8045.0063 8243.0693 -8046.1245 8241.3203 -8046.1245 8241.2568 c
-8046.1245 8241.2344 -8046.0825 8240.6875 -8046.0825 8240.5811 c
-8046.0825 8238.6826 -8047.79 8237.4199 -8049.6255 8237.4199 c
-8051.1855 8237.4199 -8052.3447 8238.6426 -8052.5352 8238.9365 c
-8052.6401 8239.1055 -8052.7666 8239.1895 -8052.9146 8239.1895 c
-8053.2729 8239.1895 -8056.1191 8239.1279 -8056.1191 8238.7051 c
-8056.1191 8238.6631 -8055.9937 8238.1992 -8055.8242 8238.1992 c
-8055.7607 8238.1992 -8055.6982 8238.2402 -8055.6353 8238.3047 c
-8055.4438 8238.5371 -8055.0225 8238.6631 -8054.6431 8238.6631 c
-8054.0942 8238.6631 -8053.1895 8238.0723 -8053.1895 8237.335 c
-8053.1895 8237.0391 -8053.5679 8236.5547 -8053.8838 8236.5547 c
-8054.1377 8236.5547 -8055.1914 8237.2715 -8055.4238 8237.2715 c
-8055.7402 8237.2715 -8055.8662 8237.123 -8056.1606 8236.7861 c
-8056.3306 8236.5967 -8056.4575 8236.5752 -8056.6465 8236.5752 c
-8056.8154 8236.5752 -8056.9634 8236.6807 -8056.9634 8236.8281 c
-8056.9634 8236.9961 -8056.6465 8237.3145 -8056.6265 8237.5879 c
-8056.6265 8237.7344 -8056.6055 8237.9658 -8056.6055 8238.1563 c
-8056.6055 8238.4102 -8056.6265 8238.7686 -8056.8994 8238.7686 c
-8057.7217 8238.7686 -8059.7681 8237.4824 -8060.6538 8236.8906 c
-8061.1592 8236.5547 -8061.2432 8236.5547 -8061.3066 8236.5547 c
-8061.4336 8236.5547 -8061.5176 8236.6387 -8061.5176 8236.7861 c
-8061.5176 8236.9121 -8059.0713 8239.0645 -8056.8994 8239.8008 c
-8056.5835 8239.9072 -8056.6055 8240.0547 -8056.5625 8240.2227 c
-8056.1406 8241.9736 -8054.5166 8244.1465 -8053.9263 8244.1465 c
-8053.7783 8244.1465 -8053.7158 8244.1465 -8053.7158 8244.252 c
-8053.7158 8244.4609 -8053.6104 8244.6934 -8053.4634 8244.6934 c
-8053.4209 8244.6934 -8053.2524 8244.4609 -8053.21 8244.4609 c
-8053.1255 8244.4609 -8053.0615 8244.9258 -8053.0415 8245.0088 c
-8052.9995 8245.1152 -8052.9146 8245.1992 -8052.8506 8245.1992 c
-8052.7666 8245.1992 -8052.5986 8244.8623 -8052.5352 8244.8623 c
-8052.5137 8244.8623 -8052.4927 8244.8818 -8052.4927 8244.9258 c
-8052.5352 8245.2832 L
f
1 D
-8053.9058 8240.7715 m
-8054.0942 8241.1934 -8054.2002 8241.4463 -8054.2002 8241.8262 c
-8054.2002 8242.0791 -8053.7783 8243.3232 y
-8053.7783 8243.3867 -8053.7998 8243.4072 -8053.8633 8243.4072 c
-8054.2847 8243.4072 -8056.0352 8241.1719 -8056.0352 8240.3066 c
-8056.0352 8240.2021 -8055.9722 8240.1387 -8055.8662 8240.1387 c
-8055.8042 8240.1387 -8053.8633 8240.3281 -8053.8633 8240.5605 c
-8053.8633 8240.624 -8053.8838 8240.6875 -8053.9058 8240.7715 c
f
-8045.8081 8251.7363 m
-8046.7568 8250.8506 -8047.6846 8249.9863 -8047.6846 8249.4375 c
-8047.6846 8249.1006 -8047.6226 8248.6992 -8047.6226 8248.2783 c
-8047.6226 8246.8232 -8048.9722 8245.4941 -8049.8774 8245.0313 c
-8050.3623 8244.7773 -8050.8481 8244.209 -8050.8481 8243.8496 c
-8050.8481 8243.7441 -8050.8057 8243.6816 -8050.7422 8243.6816 c
-8050.6582 8243.6816 -8050.5942 8243.7021 -8050.5103 8243.7021 c
-8050.4473 8243.7021 -8050.2158 8243.5752 -8050.1519 8243.5752 c
-8050.0049 8243.5752 -8049.6035 8244.2305 -8049.4561 8244.2305 c
-8049.2446 8244.2305 -8049.1826 8244.0195 -8049.1826 8243.8711 c
-8049.1826 8243.5127 -8049.7305 8242.1631 -8050.9951 8242.1631 c
-8051.7554 8242.1631 -8052.0498 8242.6055 -8052.0498 8242.9434 c
-8052.0498 8243.5752 -8051.5225 8244.1875 -8051.3975 8244.3574 c
-8051.3545 8244.3984 -8051.3335 8244.4404 -8051.3335 8244.4824 c
-8051.3335 8244.5254 -8051.3545 8244.5449 -8051.4175 8244.5449 c
-8051.6694 8244.5449 -8053.6519 8243.5127 -8053.6519 8241.7832 c
-8053.6519 8241.3623 -8053.4209 8240.5605 -8052.7666 8240.5605 c
-8050.2998 8240.5605 -8046.1675 8244.4199 -8046.1675 8248.8682 c
-8046.1675 8249.248 -8046.3984 8249.7969 -8046.4614 8250.1758 c
-8046.4834 8250.1973 -8046.4834 8250.2393 -8046.4834 8250.2803 c
-8046.4834 8250.4072 -8046.4399 8250.5762 -8046.3145 8250.5762 c
-8046.0615 8250.5762 -8044.3955 8250.3867 -8044.0366 8250.3867 c
-8042.3926 8250.3867 -8041.9702 8250.3867 -8041.9702 8251.4824 c
-8041.9702 8252.7061 -8043.1094 8253.0234 -8043.5098 8253.0234 c
-8043.8896 8253.0234 -8044.2695 8252.7266 -8044.2695 8252.3682 c
-8044.2695 8252.2627 -8044.0791 8251.8203 -8044.0791 8251.7363 c
-8044.0791 8251.5889 -8044.2065 8251.5049 -8044.3325 8251.5049 c
-8044.4795 8251.5049 -8044.9858 8252.0098 -8045.1338 8252.0098 c
-8045.3862 8252.0098 -8045.6401 8251.8838 -8045.8081 8251.7363 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. \315\326\324\262\320\316/ Adobe Calligraph) -
(ic Brush Tool/ 5 pt. \315\326\324\262\320\316/ Adobe Calligraphic Brush Tool/ 5 ) -
(pt. \306\275\303\346/ Adobe Calligraphic Brush Tool/ 3 pt. \324\262\320\316/ Adobe Cal) -
(ligraphic Brush Tool/ 7 pt. \324\262\320\316/ Adobe Calligraphic Brush Too) -
(l/ 15 pt. \324\262\320\316/ Adobe ArtOnPath Brush Tool/ \314\277\261\312/ Adobe ArtOnP) -
(ath Brush Tool/ \327\266\320\316\303\350\261\337/ Adobe ArtOnPath Brush Tool/ \273\250\320\316\302\326\267\370) -
(/ Adobe PatternOnPath Brush Tool/ \272\354\311\253\274\375\315\267\273\255\261\312/ Adobe PatternO) -
(nPath Brush Tool/ \270\347\314\330\312\275/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. \724\662\720\716)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. \715\726\724\662\720\716)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. \724\662\720\716)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. \706\675\703\746)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. \715\726\724\662\720\716)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. \724\662\720\716)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\714\677\661\712)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\673\650\720\716\702\726\667\770)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\727\666\720\716\703\750\661\737)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\670\747\714\730\712\675)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\672\754\711\653\674\775\715\667\673\655\661\712)
(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -
(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -
(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\714\727\660\746\711\653]) 0 Xs
([\714\727\660\746\711\653])
Pc
0 0 0 0 k
(\660\727\711\653)
Pc
0 0 0 1 k
(\672\732\711\653)
Pc
0 1 1 0 k
(CMYK \672\754)
Pc
0 0 1 0 k
(CMYK \673\706)
Pc
1 0 1 0 k
(CMYK \702\714)
Pc
1 0 0 0 k
(CMYK \707\740)
Pc
1 1 0 0 k
(CMYK \700\666)
Pc
0 1 0 0 k
(CMYK \721\763\672\754)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (\717\737\720\724\675\645\661\744) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\717\737\720\724\675\645\661\744)
Pc
Bb
2 (\675\645\722\776\726\701\672\732\711\653) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\675\645\722\776\726\701\672\732\711\653)
Pc
Bb
0 0 0 0 Bh
2 (\676\666\717\762\675\645\661\744) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\676\666\717\762\675\645\661\744)
Pc
Bb
0 0 0 0 Bh
2 (\710\741\672\715\672\732\711\653\724\716\723\660) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\710\741\672\715\672\732\711\653\724\716\723\660)
Pc
Bb
2 (\711\663\704\656\710\725\702\744) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\711\663\704\656\710\725\702\744)
Pc
Bb
0 0 0 0 Bh
2 (\715\655\711\653\676\666\717\762) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\715\655\711\653\676\666\717\762)
Pc
(\723\743\720\716\715\674\660\670) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\723\743\720\716\715\674\660\670)
Pc
0 0 0 0.06 (PANTONE Cool Gray 1 CVC) 0 x
(PANTONE Cool Gray 1 CVC)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\315\274\262\343 1) Ln
0 A
u
0 D
0 O
0 0 0 1 k
0 J 0 j 1 w 4 M []0 d0 XR
150.5635 125.5498 m
150.583 121.8408 148.7813 119.9863 145.1582 119.9863 C
140.1973 119.9863 L
136.9658 119.9863 135.1738 121.5459 134.8213 124.666 C
138.8145 124.666 L
138.834 124.1963 138.917 123.9092 139.0635 123.8066 C
139.2109 123.7031 139.5879 123.6514 140.1953 123.6514 C
145.1602 123.6514 L
145.7676 123.6514 146.1689 123.8184 146.3652 124.1533 C
146.502 124.375 146.5713 124.793 146.5713 125.4043 C
146.5713 126.3779 L
146.5713 127.1201 146.1113 127.4902 145.1895 127.4902 C
140.1973 127.4902 L
138.5908 127.4902 137.3086 127.8887 136.3496 128.6865 C
135.3301 129.54 134.8213 130.7266 134.8213 132.2471 C
134.8213 137.9492 L
150.4766 137.9492 L
150.4766 134.2988 L
138.8145 134.2988 L
138.8438 132.2588 L
138.8438 131.4951 139.3027 131.1123 140.2207 131.1123 C
145.377 131.1123 L
148.8145 131.1123 150.543 129.5361 150.5635 126.3838 C
150.5635 125.5498 L
f
*u
159.5166 119.9863 m
157.7256 119.9863 L
155.8477 119.9863 154.4502 120.5244 153.5303 121.5996 C
152.7471 122.5078 152.3564 123.6943 152.3564 125.1592 C
152.3564 132.8066 L
152.3564 134.2705 152.7471 135.4473 153.5303 136.3379 C
154.4502 137.4307 155.8477 137.9785 157.7256 137.9785 C
159.5166 137.9785 L
159.5166 134.3135 L
157.7266 134.3135 L
157.083 134.3135 156.6914 134.2295 156.5537 134.0635 C
156.418 133.8965 156.3496 133.4785 156.3496 132.8105 C
156.3496 125.1553 L
156.3496 124.4688 156.418 124.0459 156.5537 123.8887 C
156.6914 123.7305 157.083 123.6514 157.7266 123.6514 C
159.5166 123.6514 L
159.5166 119.9863 L
159.5166 119.9863 L
f
168.0352 125.1592 m
168.0352 125.1592 L
168.0352 123.6943 167.6543 122.5078 166.8916 121.5996 C
165.9492 120.5244 164.5391 119.9863 162.6572 119.9863 C
160.9551 119.9863 L
160.9551 123.6514 L
162.6602 123.6514 L
163.3066 123.6514 163.7002 123.7305 163.8379 123.8887 C
163.9756 124.0459 164.0449 124.4688 164.0449 125.1553 C
164.0449 132.8105 L
164.0449 133.4785 163.9756 133.8965 163.8379 134.0635 C
163.7002 134.2295 163.3066 134.3135 162.6602 134.3135 C
160.9551 134.3135 L
160.9551 137.9785 L
162.6572 137.9785 L
164.5391 137.9785 165.9492 137.4307 166.8916 136.3379 C
167.6543 135.4473 168.0352 134.2705 168.0352 132.8066 C
168.0352 125.1592 L
f
*U
u
0 1 1 0.1 k
109.3574 119.9863 m
93.0005 119.9863 L
90.3511 119.9863 88.2632 120.7344 86.7368 122.2295 C
85.2104 123.7236 84.4463 125.7617 84.4463 128.3428 C
84.4463 150.4336 L
90.813 150.4336 L
90.813 128.3369 L
90.813 127.5176 90.9443 126.96 91.2104 126.6611 C
91.4751 126.3623 92.0742 126.2119 93.0088 126.2119 C
109.3574 126.2119 L
109.3574 119.9863 L
f
109.3574 128.9805 m
103.0493 128.9805 L
103.0493 150.4336 L
109.3574 150.4336 L
109.3574 128.9805 L
f
137.0371 144.2207 m
112.125 144.2207 L
112.125 150.4336 L
137.0371 150.4336 L
137.0371 144.2207 L
f
132.1279 131.7646 m
118.4932 131.7646 L
118.4932 119.9863 L
112.125 119.9863 L
112.125 141.4531 L
118.4932 141.4531 L
118.4932 137.9785 L
132.1279 137.9785 L
132.1279 131.7646 L
f
U
0 0 0 1 k
174.543 122.7236 m
175.9502 122.7236 L
175.9531 122.6885 175.9551 122.6504 175.957 122.6104 C
175.959 122.5703 175.959 122.5088 175.959 122.4287 C
175.959 121.7207 175.7959 121.1924 175.4678 120.8506 C
175.1416 120.5068 174.6387 120.335 173.9629 120.335 C
173.5654 120.335 173.2246 120.3975 172.9424 120.5234 C
172.6592 120.6494 172.4287 120.8389 172.2529 121.0938 C
172.1318 121.2744 172.0439 121.5264 171.9912 121.8486 C
171.9385 122.1699 171.9131 122.6807 171.9131 123.3799 C
171.9131 124.0791 171.9385 124.5898 171.9912 124.9111 C
172.0439 125.2334 172.1318 125.4844 172.2529 125.666 C
172.4277 125.918 172.6523 126.1074 172.9326 126.2344 C
173.2139 126.3613 173.5488 126.4238 173.9395 126.4238 C
174.6094 126.4238 175.1123 126.248 175.4473 125.8945 C
175.7832 125.541 175.9502 125.0117 175.9502 124.3086 C
175.9502 124.252 L
174.5596 124.2549 L
174.5527 124.6504 174.5068 124.9277 174.416 125.0869 C
174.3262 125.2471 174.1748 125.3262 173.9629 125.3262 C
173.7324 125.3262 173.5742 125.2295 173.4902 125.0342 C
173.4043 124.8389 173.3633 124.3242 173.3633 123.4893 C
173.3633 123.3799 L
173.3633 122.4824 173.4043 121.9326 173.4902 121.7285 C
173.5742 121.5273 173.7324 121.4258 173.9629 121.4258 C
174.1787 121.4258 174.3271 121.5 174.415 121.6455 C
174.5 121.7939 174.543 122.0674 174.543 122.4668 C
174.543 122.7236 L
f
180.041 120.4746 m
176.8887 120.4746 L
176.8887 126.2852 L
178.3193 126.2852 L
178.3193 121.6484 L
180.041 121.6484 L
180.041 120.4746 L
f
*u
180.3828 120.4746 m
181.7207 126.2852 L
183.4209 126.2852 L
184.7402 120.4746 L
183.3096 120.4746 L
183.1299 121.5879 L
182.0049 121.5879 L
181.8262 120.4746 L
180.3828 120.4746 L
180.3828 120.4746 L
f
1 D
182.1514 122.6357 m
182.1514 122.6357 L
182.9746 122.6357 L
182.5664 125.1709 L
182.1514 122.6357 L
f
*U
0 D
185.1133 122.4443 m
186.4258 122.4443 L
186.4258 122.2744 L
186.4258 121.9551 186.4639 121.7295 186.5449 121.5996 C
186.624 121.4688 186.7588 121.4033 186.9463 121.4033 C
187.0967 121.4033 187.2148 121.4521 187.3037 121.5518 C
187.3906 121.6523 187.4346 121.7861 187.4346 121.957 C
187.4346 122.2393 187.2217 122.5088 186.7949 122.7686 C
186.7256 122.8135 186.6729 122.8477 186.6348 122.8711 C
186.623 122.8789 186.5996 122.8916 186.5693 122.9121 C
185.9922 123.2793 185.6348 123.5557 185.4941 123.7422 C
185.3936 123.8828 185.3174 124.041 185.2637 124.2168 C
185.2119 124.3936 185.1836 124.5859 185.1836 124.7939 C
185.1836 125.3018 185.3398 125.7012 185.6494 125.9902 C
185.9609 126.2803 186.3857 126.4238 186.9307 126.4238 C
187.5195 126.4238 187.9727 126.2822 188.2842 125.998 C
188.5957 125.7148 188.75 125.3018 188.75 124.7646 C
188.75 124.7412 188.75 124.7109 188.7471 124.6699 C
188.7432 124.6299 188.7432 124.5977 188.7432 124.5752 C
187.46 124.5752 L
187.46 124.6465 L
187.46 124.9014 187.417 125.0938 187.334 125.2246 C
187.25 125.3564 187.1279 125.4209 186.9707 125.4209 C
186.834 125.4209 186.7256 125.376 186.6436 125.2832 C
186.5615 125.1914 186.5205 125.0693 186.5205 124.9199 C
186.5205 124.6729 186.7539 124.4111 187.2197 124.1348 C
187.3057 124.0811 187.3701 124.041 187.415 124.0137 C
187.4521 123.9932 187.5039 123.9629 187.5703 123.9199 C
188.0713 123.6172 188.3906 123.3633 188.5322 123.1572 C
188.6201 123.0244 188.6875 122.8721 188.7324 122.7031 C
188.7793 122.5332 188.8027 122.3486 188.8027 122.1504 C
188.8027 121.5684 188.6436 121.1211 188.3252 120.8066 C
188.0068 120.4922 187.5527 120.335 186.9619 120.335 C
186.3418 120.335 185.875 120.4863 185.5645 120.7861 C
185.252 121.0869 185.0977 121.5342 185.0977 122.1279 C
185.0977 122.165 185.0986 122.2041 185.0986 122.2471 C
185.1006 122.2871 185.1055 122.3535 185.1133 122.4443 C
f
189.3867 122.4443 m
190.6992 122.4443 L
190.6992 122.2744 L
190.6992 121.9551 190.7373 121.7295 190.8184 121.5996 C
190.8975 121.4688 191.0313 121.4033 191.2207 121.4033 C
191.3711 121.4033 191.4893 121.4521 191.5771 121.5518 C
191.665 121.6523 191.708 121.7861 191.708 121.957 C
191.708 122.2393 191.4951 122.5088 191.0684 122.7686 C
190.999 122.8135 190.9463 122.8477 190.9102 122.8711 C
190.8965 122.8789 190.875 122.8916 190.8428 122.9121 C
190.2656 123.2793 189.9082 123.5557 189.7686 123.7422 C
189.668 123.8828 189.5918 124.041 189.5391 124.2168 C
189.4844 124.3936 189.458 124.5859 189.458 124.7939 C
189.458 125.3018 189.6133 125.7012 189.9238 125.9902 C
190.2344 126.2803 190.6602 126.4238 191.2051 126.4238 C
191.7939 126.4238 192.2451 126.2822 192.5576 125.998 C
192.8701 125.7148 193.0244 125.3018 193.0244 124.7646 C
193.0244 124.7412 193.0234 124.7109 193.0205 124.6699 C
193.0166 124.6299 193.0166 124.5977 193.0166 124.5752 C
191.7324 124.5752 L
191.7324 124.6465 L
191.7324 124.9014 191.6904 125.0938 191.6074 125.2246 C
191.5234 125.3564 191.4023 125.4209 191.2432 125.4209 C
191.1074 125.4209 190.999 125.376 190.917 125.2832 C
190.8359 125.1914 190.7939 125.0693 190.7939 124.9199 C
190.7939 124.6729 191.0273 124.4111 191.4932 124.1348 C
191.5791 124.0811 191.6436 124.041 191.6875 124.0137 C
191.7256 123.9932 191.7783 123.9629 191.8447 123.9199 C
192.3447 123.6172 192.665 123.3633 192.8057 123.1572 C
192.8926 123.0244 192.9609 122.8721 193.0068 122.7031 C
193.0527 122.5332 193.0762 122.3486 193.0762 122.1504 C
193.0762 121.5684 192.918 121.1211 192.5996 120.8066 C
192.2822 120.4922 191.8271 120.335 191.2354 120.335 C
190.6143 120.335 190.1484 120.4863 189.8379 120.7861 C
189.5264 121.0869 189.3711 121.5342 189.3711 122.1279 C
189.3711 122.165 189.3721 122.2041 189.3721 122.2471 C
189.374 122.2871 189.3789 122.3535 189.3867 122.4443 C
f
193.8486 120.4746 m
193.8486 126.2852 L
195.2783 126.2852 L
195.2783 120.4746 L
193.8486 120.4746 L
f
198.7813 122.7236 m
200.1885 122.7236 L
200.1904 122.6885 200.1924 122.6504 200.1943 122.6104 C
200.1963 122.5703 200.1963 122.5088 200.1963 122.4287 C
200.1963 121.7207 200.0322 121.1924 199.7051 120.8506 C
199.3779 120.5068 198.877 120.335 198.2002 120.335 C
197.8027 120.335 197.4619 120.3975 197.1797 120.5234 C
196.8955 120.6494 196.665 120.8389 196.4912 121.0938 C
196.3691 121.2744 196.2813 121.5264 196.2295 121.8486 C
196.1758 122.1699 196.1504 122.6807 196.1504 123.3799 C
196.1504 124.0791 196.1758 124.5898 196.2295 124.9111 C
196.2813 125.2334 196.3691 125.4844 196.4912 125.666 C
196.6641 125.918 196.8896 126.1074 197.1699 126.2344 C
197.4512 126.3613 197.7871 126.4238 198.1777 126.4238 C
198.8467 126.4238 199.3496 126.248 199.6846 125.8945 C
200.0205 125.541 200.1885 125.0117 200.1885 124.3086 C
200.1885 124.252 L
198.7979 124.2549 L
198.79 124.6504 198.7432 124.9277 198.6533 125.0869 C
198.5635 125.2471 198.4121 125.3262 198.2002 125.3262 C
197.9697 125.3262 197.8135 125.2295 197.7266 125.0342 C
197.6426 124.8389 197.5996 124.3242 197.5996 123.4893 C
197.5996 123.3799 L
197.5996 122.4824 197.6426 121.9326 197.7266 121.7285 C
197.8135 121.5273 197.9697 121.4258 198.2002 121.4258 C
198.416 121.4258 198.5664 121.5 198.6523 121.6455 C
198.7373 121.7939 198.7813 122.0674 198.7813 122.4668 C
198.7813 122.7236 L
f
U
u
174.1982 76.2041 m
175.6055 76.2041 L
175.6094 76.1689 175.6113 76.1309 175.6133 76.0908 C
175.6143 76.0508 175.6143 75.9893 175.6143 75.9092 C
175.6143 75.2012 175.4512 74.6729 175.124 74.3311 C
174.7979 73.9873 174.2949 73.8154 173.6182 73.8154 C
173.2207 73.8154 172.8799 73.8779 172.5977 74.0039 C
172.3145 74.1299 172.085 74.3193 171.9092 74.5742 C
171.7881 74.7549 171.7002 75.0068 171.6475 75.3291 C
171.5938 75.6504 171.5693 76.1611 171.5693 76.8604 C
171.5693 77.5596 171.5938 78.0703 171.6475 78.3916 C
171.7002 78.7139 171.7881 78.9648 171.9092 79.1465 C
172.083 79.3984 172.3086 79.5879 172.5889 79.7148 C
172.8701 79.8418 173.2051 79.9043 173.5957 79.9043 C
174.2656 79.9043 174.7686 79.7285 175.1025 79.375 C
175.4385 79.0215 175.6055 78.4922 175.6055 77.7891 C
175.6055 77.7324 L
174.2158 77.7354 L
174.209 78.1309 174.1631 78.4082 174.0723 78.5674 C
173.9824 78.7275 173.8311 78.8066 173.6182 78.8066 C
173.3887 78.8066 173.2305 78.71 173.1465 78.5146 C
173.0605 78.3193 173.0186 77.8047 173.0186 76.9697 C
173.0186 76.8604 L
173.0186 75.9629 173.0605 75.4131 173.1465 75.209 C
173.2305 75.0078 173.3887 74.9063 173.6182 74.9063 C
173.835 74.9063 173.9834 74.9805 174.0703 75.126 C
174.1553 75.2744 174.1982 75.5479 174.1982 75.9473 C
174.1982 76.2041 L
f
179.6973 73.9551 m
176.5449 73.9551 L
176.5449 79.7656 L
177.9756 79.7656 L
177.9756 75.1289 L
179.6973 75.1289 L
179.6973 73.9551 L
f
*u
180.0391 73.9551 m
181.376 79.7656 L
183.0771 79.7656 L
184.3965 73.9551 L
182.9658 73.9551 L
182.7861 75.0684 L
181.6611 75.0684 L
181.4814 73.9551 L
180.0391 73.9551 L
180.0391 73.9551 L
f
1 D
181.8076 76.1162 m
181.8076 76.1162 L
182.6309 76.1162 L
182.2227 78.6514 L
181.8076 76.1162 L
f
*U
0 D
184.7695 75.9248 m
186.082 75.9248 L
186.082 75.7549 L
186.082 75.4355 186.1201 75.21 186.2012 75.0801 C
186.2793 74.9492 186.4141 74.8838 186.6025 74.8838 C
186.7529 74.8838 186.8711 74.9326 186.96 75.0322 C
187.0469 75.1328 187.0908 75.2666 187.0908 75.4375 C
187.0908 75.7197 186.877 75.9893 186.4512 76.249 C
186.3818 76.2939 186.3291 76.3281 186.291 76.3516 C
186.2793 76.3594 186.2549 76.3721 186.2246 76.3926 C
185.6484 76.7598 185.291 77.0361 185.1504 77.2227 C
185.0498 77.3633 184.9727 77.5215 184.9199 77.6973 C
184.8682 77.874 184.8398 78.0664 184.8398 78.2744 C
184.8398 78.7822 184.9961 79.1816 185.3057 79.4707 C
185.6172 79.7607 186.042 79.9043 186.5869 79.9043 C
187.1758 79.9043 187.6279 79.7627 187.9404 79.4785 C
188.251 79.1953 188.4063 78.7822 188.4063 78.2451 C
188.4063 78.2217 188.4053 78.1914 188.4033 78.1504 C
188.3994 78.1104 188.3994 78.0781 188.3994 78.0557 C
187.1162 78.0557 L
187.1162 78.127 L
187.1162 78.3818 187.0732 78.5742 186.9902 78.7051 C
186.9063 78.8369 186.7842 78.9014 186.626 78.9014 C
186.4902 78.9014 186.3818 78.8564 186.2998 78.7637 C
186.2168 78.6719 186.1768 78.5498 186.1768 78.4004 C
186.1768 78.1533 186.4092 77.8916 186.876 77.6152 C
186.9619 77.5615 187.0264 77.5215 187.0713 77.4941 C
187.1074 77.4736 187.1592 77.4434 187.2266 77.4004 C
187.7266 77.0977 188.0469 76.8438 188.1885 76.6377 C
188.2754 76.5049 188.3438 76.3525 188.3887 76.1836 C
188.4346 76.0137 188.459 75.8291 188.459 75.6309 C
188.459 75.0488 188.2988 74.6016 187.9814 74.2871 C
187.6621 73.9727 187.208 73.8154 186.6182 73.8154 C
185.9971 73.8154 185.5313 73.9668 185.2197 74.2666 C
184.9082 74.5674 184.7529 75.0146 184.7529 75.6084 C
184.7529 75.6455 184.7549 75.6846 184.7549 75.7275 C
184.7568 75.7676 184.7607 75.834 184.7695 75.9248 C
f
189.043 75.9248 m
190.3555 75.9248 L
190.3555 75.7549 L
190.3555 75.4355 190.3936 75.21 190.4746 75.0801 C
190.5537 74.9492 190.6875 74.8838 190.876 74.8838 C
191.0273 74.8838 191.1455 74.9326 191.2334 75.0322 C
191.3213 75.1328 191.3643 75.2666 191.3643 75.4375 C
191.3643 75.7197 191.1514 75.9893 190.7246 76.249 C
190.6553 76.2939 190.6025 76.3281 190.5664 76.3516 C
190.5527 76.3594 190.5313 76.3721 190.498 76.3926 C
189.9219 76.7598 189.5645 77.0361 189.4248 77.2227 C
189.3242 77.3633 189.2471 77.5215 189.1953 77.6973 C
189.1406 77.874 189.1143 78.0664 189.1143 78.2744 C
189.1143 78.7822 189.2695 79.1816 189.5801 79.4707 C
189.8896 79.7607 190.3154 79.9043 190.8604 79.9043 C
191.4502 79.9043 191.9014 79.7627 192.2139 79.4785 C
192.5254 79.1953 192.6807 78.7822 192.6807 78.2451 C
192.6807 78.2217 192.6787 78.1914 192.6768 78.1504 C
192.6729 78.1104 192.6729 78.0781 192.6729 78.0557 C
191.3887 78.0557 L
191.3887 78.127 L
191.3887 78.3818 191.3467 78.5742 191.2627 78.7051 C
191.1797 78.8369 191.0586 78.9014 190.8994 78.9014 C
190.7637 78.9014 190.6553 78.8564 190.5723 78.7637 C
190.4912 78.6719 190.4502 78.5498 190.4502 78.4004 C
190.4502 78.1533 190.6826 77.8916 191.1494 77.6152 C
191.2354 77.5615 191.2998 77.5215 191.3438 77.4941 C
191.3818 77.4736 191.4346 77.4434 191.501 77.4004 C
192.001 77.0977 192.3203 76.8438 192.4609 76.6377 C
192.5488 76.5049 192.6162 76.3525 192.6631 76.1836 C
192.709 76.0137 192.7314 75.8291 192.7314 75.6309 C
192.7314 75.0488 192.5742 74.6016 192.2549 74.2871 C
191.9375 73.9727 191.4824 73.8154 190.8906 73.8154 C
190.2705 73.8154 189.8047 73.9668 189.4941 74.2666 C
189.1826 74.5674 189.0264 75.0146 189.0264 75.6084 C
189.0264 75.6455 189.0283 75.6846 189.0283 75.7275 C
189.0303 75.7676 189.0342 75.834 189.043 75.9248 C
f
193.5049 73.9551 m
193.5049 79.7656 L
194.9346 79.7656 L
194.9346 73.9551 L
193.5049 73.9551 L
f
198.4375 76.2041 m
199.8438 76.2041 L
199.8467 76.1689 199.8486 76.1309 199.8496 76.0908 C
199.8516 76.0508 199.8516 75.9893 199.8516 75.9092 C
199.8516 75.2012 199.6875 74.6729 199.3613 74.3311 C
199.0342 73.9873 198.5322 73.8154 197.8555 73.8154 C
197.459 73.8154 197.1172 73.8779 196.835 74.0039 C
196.5508 74.1299 196.3213 74.3193 196.1465 74.5742 C
196.0254 74.7549 195.9365 75.0068 195.8848 75.3291 C
195.8311 75.6504 195.8066 76.1611 195.8066 76.8604 C
195.8066 77.5596 195.8311 78.0703 195.8848 78.3916 C
195.9365 78.7139 196.0254 78.9648 196.1465 79.1465 C
196.3193 79.3984 196.5459 79.5879 196.8262 79.7148 C
197.1074 79.8418 197.4424 79.9043 197.834 79.9043 C
198.5029 79.9043 199.0059 79.7285 199.3398 79.375 C
199.6768 79.0215 199.8438 78.4922 199.8438 77.7891 C
199.8438 77.7324 L
198.4541 77.7354 L
198.4463 78.1309 198.3994 78.4082 198.3096 78.5674 C
198.2197 78.7275 198.0674 78.8066 197.8555 78.8066 C
197.626 78.8066 197.4697 78.71 197.3828 78.5146 C
197.2988 78.3193 197.2559 77.8047 197.2559 76.9697 C
197.2559 76.8604 L
197.2559 75.9629 197.2988 75.4131 197.3828 75.209 C
197.4697 75.0078 197.626 74.9063 197.8555 74.9063 C
198.0723 74.9063 198.2227 74.9805 198.3086 75.126 C
198.3926 75.2744 198.4375 75.5479 198.4375 75.9473 C
198.4375 76.2041 L
f
150.1475 86.7803 m
146.1924 86.7803 L
146.1533 87.2295 146.0664 87.5068 145.9307 87.6104 C
145.7949 87.7139 145.417 87.7646 144.7949 87.7646 C
139.8779 87.7646 L
139.2754 87.7646 138.8779 87.5977 138.6846 87.2637 C
138.5488 87.041 138.4805 86.624 138.4805 86.0107 C
138.4805 78.6348 L
138.4805 77.9492 138.5498 77.5264 138.6865 77.3691 C
138.8223 77.2119 139.2139 77.1318 139.8594 77.1318 C
144.7539 77.1318 L
145.4189 77.1318 145.8193 77.2119 145.9561 77.3691 C
146.0918 77.5264 146.1621 77.9492 146.1621 78.6348 C
146.1621 80.2227 L
146.1621 80.9092 146.0918 81.3359 145.9561 81.5029 C
145.8193 81.6709 145.4189 81.7529 144.7549 81.7529 C
139.8896 81.7529 L
139.8896 85.4043 L
144.7549 85.4043 L
146.6494 85.4043 148.0566 84.8652 148.9756 83.79 C
149.7559 82.8984 150.1475 81.7129 150.1475 80.2295 C
150.1475 78.6426 L
150.1475 77.1768 149.7559 75.9902 148.9746 75.0811 C
148.0566 74.0059 146.6494 73.4678 144.7529 73.4678 C
139.8594 73.4678 L
137.9834 73.4678 136.5859 74.0059 135.668 75.0801 C
134.8857 75.9883 134.4951 77.1748 134.4951 78.6396 C
134.4951 85.8975 L
134.4951 89.6045 136.2852 91.458 139.8682 91.458 C
144.8027 91.458 L
148.0146 91.458 149.7979 89.8984 150.1475 86.7803 C
f
*u
159.2031 73.4678 m
157.418 73.4678 L
155.542 73.4678 154.1465 74.0059 153.2285 75.0801 C
152.4473 75.9883 152.0576 77.1748 152.0576 78.6396 C
152.0576 86.2871 L
152.0576 87.751 152.4473 88.9287 153.2285 89.8184 C
154.1465 90.9111 155.542 91.458 157.418 91.458 C
159.2031 91.458 L
159.2031 87.7939 L
157.418 87.7939 L
156.7734 87.7939 156.3828 87.71 156.2471 87.5439 C
156.1113 87.377 156.043 86.958 156.043 86.292 C
156.043 78.6348 L
156.043 77.9492 156.1113 77.5264 156.2471 77.3691 C
156.3828 77.2119 156.7734 77.1318 157.418 77.1318 C
159.2031 77.1318 L
159.2031 73.4678 L
159.2031 73.4678 L
f
167.709 78.6396 m
167.709 78.6396 L
167.709 77.1748 167.3281 75.9883 166.5654 75.0801 C
165.626 74.0059 164.2178 73.4678 162.3408 73.4678 C
160.6396 73.4678 L
160.6396 77.1318 L
162.3418 77.1318 L
162.9893 77.1318 163.3809 77.2119 163.5186 77.3691 C
163.6553 77.5264 163.7236 77.9492 163.7236 78.6348 C
163.7236 86.292 L
163.7236 86.958 163.6553 87.377 163.5186 87.5439 C
163.3809 87.71 162.9893 87.7939 162.3418 87.7939 C
160.6396 87.7939 L
160.6396 91.458 L
162.3408 91.458 L
164.2178 91.458 165.626 90.9111 166.5654 89.8184 C
167.3281 88.9287 167.709 87.751 167.709 86.2871 C
167.709 78.6396 L
f
*U
u
0 1 1 0.1 k
109.0293 73.4678 m
92.6729 73.4678 L
90.0234 73.4678 87.9365 74.2148 86.4102 75.71 C
84.8828 77.2041 84.1191 79.2422 84.1191 81.8232 C
84.1191 103.9146 L
90.4854 103.9146 L
90.4854 81.8174 L
90.4854 80.999 90.6172 80.4404 90.8828 80.1416 C
91.1475 79.8428 91.7471 79.6924 92.6816 79.6924 C
109.0293 79.6924 L
109.0293 73.4678 L
f
109.0293 82.4609 m
102.7227 82.4609 L
102.7227 103.9146 L
109.0293 103.9146 L
109.0293 82.4609 L
f
136.71 97.7012 m
111.7988 97.7012 L
111.7988 103.9146 L
136.71 103.9146 L
136.71 97.7012 L
f
131.8027 85.2451 m
118.167 85.2451 L
118.167 73.4678 L
111.7988 73.4678 L
111.7988 94.9336 L
118.167 94.9336 L
118.167 91.459 L
131.8027 91.459 L
131.8027 85.2451 L
f
U
U
u
0 0 0 1 k
175.3701 32.2109 m
176.7773 32.2109 L
176.7813 32.1758 176.7832 32.1377 176.7852 32.0977 C
176.7861 32.0576 176.7861 31.9961 176.7861 31.916 C
176.7861 31.208 176.623 30.6797 176.2959 30.3379 C
175.9697 29.9941 175.4668 29.8223 174.79 29.8223 C
174.3926 29.8223 174.0518 29.8848 173.7695 30.0107 C
173.4863 30.1367 173.2568 30.3262 173.0811 30.5811 C
172.96 30.7617 172.8721 31.0137 172.8193 31.3359 C
172.7656 31.6572 172.7412 32.168 172.7412 32.8672 C
172.7412 33.5664 172.7656 34.0771 172.8193 34.3984 C
172.8721 34.7207 172.96 34.9717 173.0811 35.1533 C
173.2549 35.4053 173.4805 35.5947 173.7607 35.7217 C
174.042 35.8486 174.377 35.9111 174.7676 35.9111 C
175.4375 35.9111 175.9404 35.7354 176.2744 35.3818 C
176.6104 35.0283 176.7773 34.499 176.7773 33.7959 C
176.7773 33.7393 L
175.3867 33.7422 L
175.3809 34.1377 175.335 34.415 175.2441 34.5742 C
175.1543 34.7344 175.0029 34.8135 174.79 34.8135 C
174.5605 34.8135 174.4023 34.7168 174.3184 34.5215 C
174.2324 34.3262 174.1914 33.8115 174.1914 32.9766 C
174.1914 32.8672 L
174.1914 31.9697 174.2324 31.4199 174.3184 31.2158 C
174.4023 31.0146 174.5605 30.9131 174.79 30.9131 C
175.0068 30.9131 175.1553 30.9873 175.2422 31.1328 C
175.3271 31.2813 175.3701 31.5547 175.3701 31.9541 C
175.3701 32.2109 L
f
180.8691 29.9619 m
177.7168 29.9619 L
177.7168 35.7725 L
179.1475 35.7725 L
179.1475 31.1357 L
180.8691 31.1357 L
180.8691 29.9619 L
f
*u
181.2109 29.9619 m
182.5479 35.7725 L
184.249 35.7725 L
185.5684 29.9619 L
184.1377 29.9619 L
183.958 31.0752 L
182.833 31.0752 L
182.6533 29.9619 L
181.2109 29.9619 L
181.2109 29.9619 L
f
1 D
182.9795 32.123 m
182.9795 32.123 L
183.8027 32.123 L
183.3945 34.6582 L
182.9795 32.123 L
f
*U
0 D
185.9414 31.9316 m
187.2539 31.9316 L
187.2539 31.7617 L
187.2539 31.4424 187.292 31.2168 187.373 31.0869 C
187.4512 30.9561 187.5859 30.8906 187.7734 30.8906 C
187.9248 30.8906 188.043 30.9395 188.1318 31.0391 C
188.2188 31.1396 188.2627 31.2734 188.2627 31.4443 C
188.2627 31.7266 188.0488 31.9961 187.623 32.2559 C
187.5537 32.3008 187.501 32.335 187.4629 32.3584 C
187.4512 32.3662 187.4277 32.3789 187.3965 32.3994 C
186.8203 32.7666 186.4629 33.043 186.3223 33.2295 C
186.2217 33.3701 186.1445 33.5283 186.0918 33.7041 C
186.04 33.8809 186.0117 34.0732 186.0117 34.2813 C
186.0117 34.7891 186.168 35.1885 186.4775 35.4775 C
186.7891 35.7676 187.2139 35.9111 187.7588 35.9111 C
188.3477 35.9111 188.8008 35.7695 189.1123 35.4854 C
189.4238 35.2021 189.5781 34.7891 189.5781 34.252 C
189.5781 34.2285 189.5771 34.1982 189.5752 34.1572 C
189.5713 34.1172 189.5713 34.085 189.5713 34.0625 C
188.2881 34.0625 L
188.2881 34.1338 L
188.2881 34.3887 188.2451 34.5811 188.1621 34.7119 C
188.0781 34.8438 187.9561 34.9082 187.7979 34.9082 C
187.6621 34.9082 187.5537 34.8633 187.4717 34.7705 C
187.3887 34.6787 187.3486 34.5566 187.3486 34.4072 C
187.3486 34.1602 187.5811 33.8984 188.0479 33.6221 C
188.1338 33.5684 188.1982 33.5283 188.2432 33.501 C
188.2793 33.4805 188.3311 33.4502 188.3984 33.4072 C
188.8984 33.1045 189.2188 32.8506 189.3604 32.6445 C
189.4473 32.5117 189.5156 32.3594 189.5605 32.1904 C
189.6074 32.0205 189.6309 31.8359 189.6309 31.6377 C
189.6309 31.0557 189.4707 30.6084 189.1533 30.2939 C
188.834 29.9795 188.3799 29.8223 187.79 29.8223 C
187.1689 29.8223 186.7031 29.9736 186.3916 30.2734 C
186.0801 30.5742 185.9248 31.0215 185.9248 31.6152 C
185.9248 31.6523 185.9268 31.6914 185.9268 31.7344 C
185.9287 31.7744 185.9336 31.8408 185.9414 31.9316 C
f
190.2148 31.9316 m
191.5273 31.9316 L
191.5273 31.7617 L
191.5273 31.4424 191.5654 31.2168 191.6465 31.0869 C
191.7256 30.9561 191.8594 30.8906 192.0479 30.8906 C
192.1992 30.8906 192.3174 30.9395 192.4053 31.0391 C
192.4932 31.1396 192.5361 31.2734 192.5361 31.4443 C
192.5361 31.7266 192.3232 31.9961 191.8965 32.2559 C
191.8271 32.3008 191.7744 32.335 191.7383 32.3584 C
191.7246 32.3662 191.7031 32.3789 191.6699 32.3994 C
191.0938 32.7666 190.7363 33.043 190.5967 33.2295 C
190.4961 33.3701 190.4189 33.5283 190.3672 33.7041 C
190.3125 33.8809 190.2861 34.0732 190.2861 34.2813 C
190.2861 34.7891 190.4414 35.1885 190.752 35.4775 C
191.0615 35.7676 191.4873 35.9111 192.0322 35.9111 C
192.6221 35.9111 193.0732 35.7695 193.3857 35.4854 C
193.6973 35.2021 193.8525 34.7891 193.8525 34.252 C
193.8525 34.2285 193.8506 34.1982 193.8486 34.1572 C
193.8447 34.1172 193.8447 34.085 193.8447 34.0625 C
192.5605 34.0625 L
192.5605 34.1338 L
192.5605 34.3887 192.5186 34.5811 192.4346 34.7119 C
192.3516 34.8438 192.2305 34.9082 192.0713 34.9082 C
191.9355 34.9082 191.8271 34.8633 191.7441 34.7705 C
191.6631 34.6787 191.6221 34.5566 191.6221 34.4072 C
191.6221 34.1602 191.8545 33.8984 192.3213 33.6221 C
192.4072 33.5684 192.4717 33.5283 192.5156 33.501 C
192.5537 33.4805 192.6064 33.4502 192.6719 33.4072 C
193.1729 33.1045 193.4922 32.8506 193.6328 32.6445 C
193.7207 32.5117 193.7881 32.3594 193.835 32.1904 C
193.8809 32.0205 193.9043 31.8359 193.9043 31.6377 C
193.9043 31.0557 193.7461 30.6084 193.4268 30.2939 C
193.1094 29.9795 192.6543 29.8223 192.0625 29.8223 C
191.4424 29.8223 190.9766 29.9736 190.666 30.2734 C
190.3545 30.5742 190.1982 31.0215 190.1982 31.6152 C
190.1982 31.6523 190.2002 31.6914 190.2002 31.7344 C
190.2021 31.7744 190.2061 31.8408 190.2148 31.9316 C
f
194.6768 29.9619 m
194.6768 35.7725 L
196.1064 35.7725 L
196.1064 29.9619 L
194.6768 29.9619 L
f
199.6094 32.2109 m
201.0156 32.2109 L
201.0186 32.1758 201.0205 32.1377 201.0215 32.0977 C
201.0234 32.0576 201.0234 31.9961 201.0234 31.916 C
201.0234 31.208 200.8594 30.6797 200.5332 30.3379 C
200.2061 29.9941 199.7041 29.8223 199.0273 29.8223 C
198.6309 29.8223 198.2891 29.8848 198.0068 30.0107 C
197.7227 30.1367 197.4932 30.3262 197.3184 30.5811 C
197.1973 30.7617 197.1084 31.0137 197.0566 31.3359 C
197.0029 31.6572 196.9785 32.168 196.9785 32.8672 C
196.9785 33.5664 197.0029 34.0771 197.0566 34.3984 C
197.1084 34.7207 197.1973 34.9717 197.3184 35.1533 C
197.4912 35.4053 197.7178 35.5947 197.998 35.7217 C
198.2793 35.8486 198.6143 35.9111 199.0059 35.9111 C
199.6748 35.9111 200.1777 35.7354 200.5117 35.3818 C
200.8486 35.0283 201.0156 34.499 201.0156 33.7959 C
201.0156 33.7393 L
199.626 33.7422 L
199.6182 34.1377 199.5713 34.415 199.4814 34.5742 C
199.3916 34.7344 199.2393 34.8135 199.0273 34.8135 C
198.7979 34.8135 198.6416 34.7168 198.5547 34.5215 C
198.4707 34.3262 198.4277 33.8115 198.4277 32.9766 C
198.4277 32.8672 L
198.4277 31.9697 198.4707 31.4199 198.5547 31.2158 C
198.6416 31.0146 198.7979 30.9131 199.0273 30.9131 C
199.2441 30.9131 199.3945 30.9873 199.4805 31.1328 C
199.5645 31.2813 199.6094 31.5547 199.6094 31.9541 C
199.6094 32.2109 L
f
*u
149.8164 42.4707 m
147.8164 39.7676 144.498 35.4463 139.8633 29.5029 C
134.7363 29.4746 L
144.4658 42.4707 L
149.8164 42.4707 L
149.8164 42.4707 L
f
150.8857 47.4648 m
150.8857 47.4648 L
150.8857 43.8066 L
135.0205 43.8066 L
135.0205 47.4648 L
150.8857 47.4648 L
f
*U
*u
159.332 29.5029 m
157.5215 29.5029 L
155.6211 29.5029 154.2061 30.04 153.2764 31.1143 C
152.4844 32.0205 152.0898 33.2051 152.0898 34.667 C
152.0898 42.3008 L
152.0898 43.7646 152.4844 44.9395 153.2764 45.8271 C
154.2061 46.9189 155.6211 47.4648 157.5215 47.4648 C
159.332 47.4648 L
159.332 43.8066 L
157.5225 43.8066 L
156.8691 43.8066 156.4736 43.7236 156.3359 43.5557 C
156.1963 43.3896 156.1279 42.9727 156.1279 42.3066 C
156.1279 34.6631 L
156.1279 33.9775 156.1963 33.5557 156.3359 33.3975 C
156.4736 33.2412 156.8691 33.1631 157.5225 33.1631 C
159.332 33.1631 L
159.332 29.5029 L
159.332 29.5029 L
f
167.9512 34.667 m
167.9512 34.667 L
167.9512 33.2051 167.5654 32.0205 166.791 31.1143 C
165.8398 30.04 164.4131 29.5029 162.5098 29.5029 C
160.7852 29.5029 L
160.7852 33.1631 L
162.5127 33.1631 L
163.168 33.1631 163.5645 33.2412 163.7041 33.3975 C
163.8428 33.5557 163.9111 33.9775 163.9111 34.6631 C
163.9111 42.3066 L
163.9111 42.9727 163.8428 43.3896 163.7041 43.5557 C
163.5645 43.7236 163.168 43.8066 162.5127 43.8066 C
160.7852 43.8066 L
160.7852 47.4648 L
162.5098 47.4648 L
164.4131 47.4648 165.8398 46.9189 166.791 45.8271 C
167.5654 44.9395 167.9512 43.7646 167.9512 42.3008 C
167.9512 34.667 L
f
*U
u
0 1 1 0.1 k
109.2715 29.4746 m
92.9141 29.4746 L
90.2656 29.4746 88.1777 30.2217 86.6514 31.7168 C
85.124 33.2109 84.3613 35.249 84.3613 37.8301 C
84.3613 59.9209 L
90.7275 59.9209 L
90.7275 37.8242 L
90.7275 37.0059 90.8594 36.4473 91.125 36.1484 C
91.3887 35.8496 91.9893 35.6992 92.9229 35.6992 C
109.2715 35.6992 L
109.2715 29.4746 L
f
109.2715 38.4678 m
102.9639 38.4678 L
102.9639 59.9209 L
109.2715 59.9209 L
109.2715 38.4678 L
f
136.9502 53.708 m
112.04 53.708 L
112.04 59.9209 L
136.9502 59.9209 L
136.9502 53.708 L
f
132.0439 41.252 m
118.4072 41.252 L
118.4072 29.4746 L
112.04 29.4746 L
112.04 50.9404 L
118.4072 50.9404 L
118.4072 47.4658 L
132.0439 47.4658 L
132.0439 41.252 L
f
U
U
u
0 0 0 1 k
175.7959 -11.5723 m
177.2031 -11.5723 L
177.207 -11.6074 177.208 -11.6455 177.21 -11.6855 C
177.2119 -11.7256 177.2119 -11.7871 177.2119 -11.8672 C
177.2119 -12.5752 177.0488 -13.1035 176.7207 -13.4453 C
176.3945 -13.7891 175.8916 -13.9609 175.2158 -13.9609 C
174.8184 -13.9609 174.4775 -13.8984 174.1953 -13.7725 C
173.9121 -13.6465 173.6826 -13.457 173.5068 -13.2021 C
173.3848 -13.0215 173.2969 -12.7695 173.2451 -12.4473 C
173.1914 -12.126 173.166 -11.6152 173.166 -10.916 C
173.166 -10.2168 173.1914 -9.70605 173.2451 -9.38477 C
173.2969 -9.0625 173.3848 -8.81152 173.5068 -8.62988 C
173.6807 -8.37793 173.9053 -8.18848 174.1865 -8.06152 C
174.4678 -7.93457 174.8027 -7.87207 175.1924 -7.87207 C
175.8633 -7.87207 176.3662 -8.04785 176.7002 -8.40137 C
177.0361 -8.75488 177.2031 -9.28418 177.2031 -9.9873 C
177.2031 -10.0439 L
175.8125 -10.041 L
175.8066 -9.64551 175.7598 -9.36816 175.6689 -9.20898 C
175.5801 -9.04883 175.4277 -8.96973 175.2158 -8.96973 C
174.9854 -8.96973 174.8281 -9.06641 174.7441 -9.26172 C
174.6582 -9.45703 174.6162 -9.97168 174.6162 -10.8066 C
174.6162 -10.916 L
174.6162 -11.8135 174.6582 -12.3633 174.7441 -12.5674 C
174.8281 -12.7686 174.9854 -12.8701 175.2158 -12.8701 C
175.4316 -12.8701 175.5811 -12.7959 175.668 -12.6504 C
175.7529 -12.502 175.7959 -12.2285 175.7959 -11.8291 C
175.7959 -11.5723 L
f
181.2939 -13.8213 m
178.1426 -13.8213 L
178.1426 -8.01074 L
179.5732 -8.01074 L
179.5732 -12.6475 L
181.2939 -12.6475 L
181.2939 -13.8213 L
f
*u
181.6357 -13.8213 m
182.9736 -8.01074 L
184.6748 -8.01074 L
185.9932 -13.8213 L
184.5625 -13.8213 L
184.3828 -12.708 L
183.2578 -12.708 L
183.0791 -13.8213 L
181.6357 -13.8213 L
181.6357 -13.8213 L
f
1 D
183.4043 -11.6602 m
183.4043 -11.6602 L
184.2285 -11.6602 L
183.8193 -9.125 L
183.4043 -11.6602 L
f
*U
0 D
186.3672 -11.8516 m
187.6787 -11.8516 L
187.6787 -12.0215 L
187.6787 -12.3408 187.7168 -12.5664 187.7979 -12.6963 C
187.877 -12.8271 188.0117 -12.8926 188.1992 -12.8926 C
188.3506 -12.8926 188.4688 -12.8438 188.5566 -12.7441 C
188.6436 -12.6436 188.6885 -12.5098 188.6885 -12.3389 C
188.6885 -12.0566 188.4746 -11.7871 188.0479 -11.5273 C
187.9785 -11.4824 187.9258 -11.4482 187.8887 -11.4248 C
187.876 -11.417 187.8525 -11.4043 187.8223 -11.3838 C
187.2461 -11.0166 186.8877 -10.7402 186.748 -10.5537 C
186.6465 -10.4131 186.5703 -10.2549 186.5176 -10.0791 C
186.4658 -9.90234 186.4375 -9.70996 186.4375 -9.50195 C
186.4375 -8.99414 186.5938 -8.59473 186.9023 -8.30566 C
187.2139 -8.01563 187.6387 -7.87207 188.1836 -7.87207 C
188.7734 -7.87207 189.2256 -8.01367 189.5381 -8.29785 C
189.8486 -8.58105 190.0039 -8.99414 190.0039 -9.53125 C
190.0039 -9.55469 190.0029 -9.58496 190 -9.62598 C
189.9961 -9.66602 189.9961 -9.69824 189.9961 -9.7207 C
188.7129 -9.7207 L
188.7129 -9.64941 L
188.7129 -9.39453 188.6699 -9.20215 188.5869 -9.07129 C
188.5039 -8.93945 188.3809 -8.875 188.2236 -8.875 C
188.0879 -8.875 187.9785 -8.91992 187.8965 -9.0127 C
187.8145 -9.10449 187.7734 -9.22656 187.7734 -9.37598 C
187.7734 -9.62305 188.0068 -9.88477 188.4727 -10.1611 C
188.5586 -10.2148 188.623 -10.2549 188.668 -10.2822 C
188.7051 -10.3027 188.7568 -10.333 188.8232 -10.376 C
189.3242 -10.6787 189.6445 -10.9326 189.7852 -11.1387 C
189.873 -11.2715 189.9414 -11.4238 189.9854 -11.5928 C
190.0322 -11.7627 190.0557 -11.9473 190.0557 -12.1455 C
190.0557 -12.7275 189.8965 -13.1748 189.5781 -13.4893 C
189.2598 -13.8037 188.8057 -13.9609 188.2148 -13.9609 C
187.5947 -13.9609 187.1279 -13.8096 186.8174 -13.5098 C
186.5049 -13.209 186.3506 -12.7617 186.3506 -12.168 C
186.3506 -12.1309 186.3525 -12.0918 186.3525 -12.0488 C
186.3545 -12.0088 186.3584 -11.9424 186.3672 -11.8516 C
f
190.6396 -11.8516 m
191.9521 -11.8516 L
191.9521 -12.0215 L
191.9521 -12.3408 191.9902 -12.5664 192.0713 -12.6963 C
192.1504 -12.8271 192.2852 -12.8926 192.4736 -12.8926 C
192.625 -12.8926 192.7422 -12.8438 192.8301 -12.7441 C
192.918 -12.6436 192.9609 -12.5098 192.9609 -12.3389 C
192.9609 -12.0566 192.748 -11.7871 192.3213 -11.5273 C
192.252 -11.4824 192.2002 -11.4482 192.1641 -11.4248 C
192.1494 -11.417 192.1279 -11.4043 192.0957 -11.3838 C
191.5195 -11.0166 191.1611 -10.7402 191.0215 -10.5537 C
190.9209 -10.4131 190.8447 -10.2549 190.792 -10.0791 C
190.7373 -9.90234 190.7109 -9.70996 190.7109 -9.50195 C
190.7109 -8.99414 190.8662 -8.59473 191.1768 -8.30566 C
191.4873 -8.01563 191.9131 -7.87207 192.458 -7.87207 C
193.0469 -7.87207 193.498 -8.01367 193.8105 -8.29785 C
194.123 -8.58105 194.2773 -8.99414 194.2773 -9.53125 C
194.2773 -9.55469 194.2764 -9.58496 194.2734 -9.62598 C
194.2695 -9.66602 194.2695 -9.69824 194.2695 -9.7207 C
192.9854 -9.7207 L
192.9854 -9.64941 L
192.9854 -9.39453 192.9434 -9.20215 192.8604 -9.07129 C
192.7764 -8.93945 192.6553 -8.875 192.4961 -8.875 C
192.3613 -8.875 192.252 -8.91992 192.1699 -9.0127 C
192.0889 -9.10449 192.0469 -9.22656 192.0469 -9.37598 C
192.0469 -9.62305 192.2803 -9.88477 192.7461 -10.1611 C
192.832 -10.2148 192.8965 -10.2549 192.9414 -10.2822 C
192.9795 -10.3027 193.0313 -10.333 193.0977 -10.376 C
193.5977 -10.6787 193.918 -10.9326 194.0586 -11.1387 C
194.1465 -11.2715 194.2139 -11.4238 194.2598 -11.5928 C
194.3057 -11.7627 194.3291 -11.9473 194.3291 -12.1455 C
194.3291 -12.7275 194.1709 -13.1748 193.8525 -13.4893 C
193.5352 -13.8037 193.0801 -13.9609 192.4883 -13.9609 C
191.8682 -13.9609 191.4014 -13.8096 191.0908 -13.5098 C
190.7793 -13.209 190.624 -12.7617 190.624 -12.168 C
190.624 -12.1309 190.625 -12.0918 190.625 -12.0488 C
190.6279 -12.0088 190.6318 -11.9424 190.6396 -11.8516 C
f
195.1016 -13.8213 m
195.1016 -8.01074 L
196.5313 -8.01074 L
196.5313 -13.8213 L
195.1016 -13.8213 L
f
200.0352 -11.5723 m
201.4414 -11.5723 L
201.4443 -11.6074 201.4453 -11.6455 201.4473 -11.6855 C
201.4492 -11.7256 201.4492 -11.7871 201.4492 -11.8672 C
201.4492 -12.5752 201.2852 -13.1035 200.958 -13.4453 C
200.6309 -13.7891 200.1299 -13.9609 199.4531 -13.9609 C
199.0557 -13.9609 198.7148 -13.8984 198.4326 -13.7725 C
198.1484 -13.6465 197.9189 -13.457 197.7441 -13.2021 C
197.623 -13.0215 197.5342 -12.7695 197.4824 -12.4473 C
197.4287 -12.126 197.4033 -11.6152 197.4033 -10.916 C
197.4033 -10.2168 197.4287 -9.70605 197.4824 -9.38477 C
197.5342 -9.0625 197.623 -8.81152 197.7441 -8.62988 C
197.917 -8.37793 198.1426 -8.18848 198.4229 -8.06152 C
198.7051 -7.93457 199.04 -7.87207 199.4307 -7.87207 C
200.1006 -7.87207 200.6035 -8.04785 200.9375 -8.40137 C
201.2734 -8.75488 201.4414 -9.28418 201.4414 -9.9873 C
201.4414 -10.0439 L
200.0508 -10.041 L
200.0439 -9.64551 199.9961 -9.36816 199.9072 -9.20898 C
199.8174 -9.04883 199.665 -8.96973 199.4531 -8.96973 C
199.2227 -8.96973 199.0674 -9.06641 198.9805 -9.26172 C
198.8955 -9.45703 198.8525 -9.97168 198.8525 -10.8066 C
198.8525 -10.916 L
198.8525 -11.8135 198.8955 -12.3633 198.9805 -12.5674 C
199.0674 -12.7686 199.2227 -12.8701 199.4531 -12.8701 C
199.6689 -12.8701 199.8193 -12.7959 199.9053 -12.6504 C
199.9902 -12.502 200.0352 -12.2285 200.0352 -11.8291 C
200.0352 -11.5723 L
f
*u
150.4316 -9.13672 m
150.4316 -10.6016 150.0498 -11.7881 149.2871 -12.6963 C
148.3467 -13.7705 146.9385 -14.3086 145.0605 -14.3086 C
139.9219 -14.3086 L
138.043 -14.3086 136.6426 -13.7705 135.7236 -12.6963 C
134.9404 -11.7881 134.5488 -10.6016 134.5488 -9.13672 C
134.5488 -8.58105 L
134.5488 -6.89355 135.1074 -5.78027 136.2217 -5.24316 C
135.1074 -4.61328 134.5488 -3.51074 134.5488 -1.93457 C
134.5488 -1.48926 L
134.5488 -0.025391 134.9404 1.15234 135.7236 2.04199 C
136.6426 3.13477 138.043 3.68164 139.9219 3.68164 C
145.0605 3.68164 L
146.9385 3.68164 148.3467 3.13477 149.2871 2.04199 C
150.0498 1.15234 150.4316 -0.025391 150.4316 -1.48926 C
150.4316 -1.93457 L
150.4316 -3.51074 149.873 -4.61328 148.7549 -5.24316 C
149.873 -5.78027 150.4316 -6.89355 150.4316 -8.58105 C
150.4316 -9.13672 L
150.4316 -9.13672 L
f
1 D
146.4414 -1.92871 m
146.4414 -1.92871 L
146.4414 -1.4834 L
146.4414 -0.816406 146.3721 -0.399414 146.2363 -0.232422 C
146.0996 -0.066406 145.707 0.017578 145.0615 0.017578 C
139.9209 0.017578 L
139.2725 0.017578 138.8818 -0.066406 138.7451 -0.232422 C
138.6084 -0.399414 138.5391 -0.816406 138.5391 -1.4834 C
138.5391 -1.92871 L
138.5391 -2.61426 138.582 -3.03125 138.6709 -3.17969 C
138.7588 -3.32813 139.0391 -3.41113 139.5088 -3.42969 C
141.5068 -3.48535 143.4941 -3.48535 145.4727 -3.42969 C
145.9424 -3.41113 146.2217 -3.32813 146.3096 -3.17969 C
146.3984 -3.03125 146.4414 -2.61426 146.4414 -1.92871 C
146.4414 -1.92871 L
f
146.4414 -9.14063 m
146.4414 -9.14063 L
146.4414 -8.58398 L
146.4414 -7.87793 146.3984 -7.45117 146.3096 -7.30371 C
146.2217 -7.1543 145.9424 -7.08105 145.4727 -7.08105 C
139.5088 -7.08105 L
139.0391 -7.08105 138.7588 -7.1543 138.6709 -7.30371 C
138.582 -7.45117 138.5391 -7.87793 138.5391 -8.58398 C
138.5391 -9.14063 L
138.5391 -9.82715 138.6084 -10.25 138.7451 -10.4072 C
138.8818 -10.5645 139.2725 -10.6445 139.9209 -10.6445 C
145.0615 -10.6445 L
145.707 -10.6445 146.0996 -10.5645 146.2363 -10.4072 C
146.3721 -10.25 146.4414 -9.82715 146.4414 -9.14063 C
f
*U
*u
0 D
159.248 -14.3086 m
157.46 -14.3086 L
155.583 -14.3086 154.1865 -13.7705 153.2676 -12.6963 C
152.4863 -11.7881 152.0947 -10.6016 152.0947 -9.13672 C
152.0947 -1.48926 L
152.0947 -0.025391 152.4863 1.15234 153.2676 2.04199 C
154.1865 3.13477 155.583 3.68164 157.46 3.68164 C
159.248 3.68164 L
159.248 0.017578 L
157.4609 0.017578 L
156.8164 0.017578 156.4258 -0.066406 156.2891 -0.232422 C
156.1523 -0.399414 156.083 -0.818359 156.083 -1.48438 C
156.083 -9.1416 L
156.083 -9.82715 156.1523 -10.25 156.2891 -10.4072 C
156.4258 -10.5645 156.8164 -10.6445 157.4609 -10.6445 C
159.248 -10.6445 L
159.248 -14.3086 L
159.248 -14.3086 L
f
167.7627 -9.13672 m
167.7627 -9.13672 L
167.7627 -10.6016 167.3809 -11.7881 166.6182 -12.6963 C
165.6777 -13.7705 164.2686 -14.3086 162.3896 -14.3086 C
160.6865 -14.3086 L
160.6865 -10.6445 L
162.3906 -10.6445 L
163.0391 -10.6445 163.4297 -10.5645 163.5674 -10.4072 C
163.7051 -10.25 163.7734 -9.82715 163.7734 -9.1416 C
163.7734 -1.48438 L
163.7734 -0.818359 163.7051 -0.399414 163.5674 -0.232422 C
163.4297 -0.066406 163.0391 0.017578 162.3906 0.017578 C
160.6865 0.017578 L
160.6865 3.68164 L
162.3896 3.68164 L
164.2686 3.68164 165.6777 3.13477 166.6182 2.04199 C
167.3809 1.15234 167.7627 -0.025391 167.7627 -1.48926 C
167.7627 -9.13672 L
f
*U
u
0 1 1 0.1 k
109.083 -14.3086 m
92.7266 -14.3086 L
90.0781 -14.3086 87.9902 -13.5615 86.4639 -12.0664 C
84.9375 -10.5723 84.1729 -8.53418 84.1729 -5.95313 C
84.1729 16.1377 L
90.5391 16.1377 L
90.5391 -5.95898 L
90.5391 -6.77734 90.6719 -7.33594 90.9375 -7.63477 C
91.2021 -7.93359 91.8008 -8.08398 92.7354 -8.08398 C
109.083 -8.08398 L
109.083 -14.3086 L
f
109.083 -5.31543 m
102.7764 -5.31543 L
102.7764 16.1377 L
109.083 16.1377 L
109.083 -5.31543 L
f
136.7646 9.9248 m
111.8516 9.9248 L
111.8516 16.1377 L
136.7646 16.1377 L
136.7646 9.9248 L
f
131.8555 -2.53125 m
118.2197 -2.53125 L
118.2197 -14.3086 L
111.8516 -14.3086 L
111.8516 7.15723 L
118.2197 7.15723 L
118.2197 3.68262 L
131.8555 3.68262 L
131.8555 -2.53125 L
f
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
